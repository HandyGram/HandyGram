import 'dart:convert' show json;

part 'object.dart';
part 'function.dart';

part 'objects/error.dart';
part 'objects/ok.dart';
part 'objects/authentication_code_type.dart';
part 'objects/authentication_code_info.dart';
part 'objects/email_address_authentication_code_info.dart';
part 'objects/email_address_authentication.dart';
part 'objects/text_entity.dart';
part 'objects/text_entities.dart';
part 'objects/formatted_text.dart';
part 'objects/terms_of_service.dart';
part 'objects/authorization_state.dart';
part 'objects/password_state.dart';
part 'objects/recovery_email_address.dart';
part 'objects/temporary_password_state.dart';
part 'objects/local_file.dart';
part 'objects/remote_file.dart';
part 'objects/file.dart';
part 'objects/input_file.dart';
part 'objects/photo_size.dart';
part 'objects/minithumbnail.dart';
part 'objects/thumbnail_format.dart';
part 'objects/thumbnail.dart';
part 'objects/mask_point.dart';
part 'objects/mask_position.dart';
part 'objects/sticker_format.dart';
part 'objects/sticker_type.dart';
part 'objects/sticker_full_type.dart';
part 'objects/closed_vector_path.dart';
part 'objects/poll_option.dart';
part 'objects/poll_type.dart';
part 'objects/animation.dart';
part 'objects/audio.dart';
part 'objects/document.dart';
part 'objects/photo.dart';
part 'objects/sticker.dart';
part 'objects/video.dart';
part 'objects/video_note.dart';
part 'objects/voice_note.dart';
part 'objects/animated_emoji.dart';
part 'objects/contact.dart';
part 'objects/location.dart';
part 'objects/venue.dart';
part 'objects/game.dart';
part 'objects/poll.dart';
part 'objects/profile_photo.dart';
part 'objects/chat_photo_info.dart';
part 'objects/user_type.dart';
part 'objects/bot_command.dart';
part 'objects/bot_commands.dart';
part 'objects/bot_menu_button.dart';
part 'objects/chat_location.dart';
part 'objects/animated_chat_photo.dart';
part 'objects/chat_photo.dart';
part 'objects/chat_photos.dart';
part 'objects/input_chat_photo.dart';
part 'objects/chat_permissions.dart';
part 'objects/chat_administrator_rights.dart';
part 'objects/premium_payment_option.dart';
part 'objects/emoji_status.dart';
part 'objects/emoji_statuses.dart';
part 'objects/usernames.dart';
part 'objects/user.dart';
part 'objects/bot_info.dart';
part 'objects/user_full_info.dart';
part 'objects/users.dart';
part 'objects/chat_administrator.dart';
part 'objects/chat_administrators.dart';
part 'objects/chat_member_status.dart';
part 'objects/chat_member.dart';
part 'objects/chat_members.dart';
part 'objects/chat_members_filter.dart';
part 'objects/supergroup_members_filter.dart';
part 'objects/chat_invite_link.dart';
part 'objects/chat_invite_links.dart';
part 'objects/chat_invite_link_count.dart';
part 'objects/chat_invite_link_counts.dart';
part 'objects/chat_invite_link_member.dart';
part 'objects/chat_invite_link_members.dart';
part 'objects/chat_invite_link_info.dart';
part 'objects/chat_join_request.dart';
part 'objects/chat_join_requests.dart';
part 'objects/chat_join_requests_info.dart';
part 'objects/basic_group.dart';
part 'objects/basic_group_full_info.dart';
part 'objects/supergroup.dart';
part 'objects/supergroup_full_info.dart';
part 'objects/secret_chat_state.dart';
part 'objects/secret_chat.dart';
part 'objects/message_sender.dart';
part 'objects/message_senders.dart';
part 'objects/chat_message_sender.dart';
part 'objects/chat_message_senders.dart';
part 'objects/message_forward_origin.dart';
part 'objects/reaction_type.dart';
part 'objects/message_forward_info.dart';
part 'objects/message_reply_info.dart';
part 'objects/message_reaction.dart';
part 'objects/message_interaction_info.dart';
part 'objects/unread_reaction.dart';
part 'objects/message_sending_state.dart';
part 'objects/message.dart';
part 'objects/messages.dart';
part 'objects/found_messages.dart';
part 'objects/found_chat_messages.dart';
part 'objects/message_position.dart';
part 'objects/message_positions.dart';
part 'objects/message_calendar_day.dart';
part 'objects/message_calendar.dart';
part 'objects/sponsored_message.dart';
part 'objects/sponsored_messages.dart';
part 'objects/file_download.dart';
part 'objects/downloaded_file_counts.dart';
part 'objects/found_file_downloads.dart';
part 'objects/notification_settings_scope.dart';
part 'objects/chat_notification_settings.dart';
part 'objects/scope_notification_settings.dart';
part 'objects/draft_message.dart';
part 'objects/chat_type.dart';
part 'objects/chat_filter.dart';
part 'objects/chat_filter_info.dart';
part 'objects/recommended_chat_filter.dart';
part 'objects/recommended_chat_filters.dart';
part 'objects/chat_list.dart';
part 'objects/chat_lists.dart';
part 'objects/chat_source.dart';
part 'objects/chat_position.dart';
part 'objects/chat_available_reactions.dart';
part 'objects/video_chat.dart';
part 'objects/chat.dart';
part 'objects/chats.dart';
part 'objects/chat_nearby.dart';
part 'objects/chats_nearby.dart';
part 'objects/public_chat_type.dart';
part 'objects/chat_action_bar.dart';
part 'objects/keyboard_button_type.dart';
part 'objects/keyboard_button.dart';
part 'objects/inline_keyboard_button_type.dart';
part 'objects/inline_keyboard_button.dart';
part 'objects/reply_markup.dart';
part 'objects/login_url_info.dart';
part 'objects/web_app_info.dart';
part 'objects/message_thread_info.dart';
part 'objects/forum_topic_icon.dart';
part 'objects/forum_topic_info.dart';
part 'objects/forum_topic.dart';
part 'objects/forum_topics.dart';
part 'objects/rich_text.dart';
part 'objects/page_block_caption.dart';
part 'objects/page_block_list_item.dart';
part 'objects/page_block_horizontal_alignment.dart';
part 'objects/page_block_vertical_alignment.dart';
part 'objects/page_block_table_cell.dart';
part 'objects/page_block_related_article.dart';
part 'objects/page_block.dart';
part 'objects/web_page_instant_view.dart';
part 'objects/web_page.dart';
part 'objects/country_info.dart';
part 'objects/countries.dart';
part 'objects/phone_number_info.dart';
part 'objects/bank_card_action_open_url.dart';
part 'objects/bank_card_info.dart';
part 'objects/address.dart';
part 'objects/theme_parameters.dart';
part 'objects/labeled_price_part.dart';
part 'objects/invoice.dart';
part 'objects/order_info.dart';
part 'objects/shipping_option.dart';
part 'objects/saved_credentials.dart';
part 'objects/input_credentials.dart';
part 'objects/payment_provider.dart';
part 'objects/payment_option.dart';
part 'objects/payment_form.dart';
part 'objects/validated_order_info.dart';
part 'objects/payment_result.dart';
part 'objects/payment_receipt.dart';
part 'objects/input_invoice.dart';
part 'objects/message_extended_media.dart';
part 'objects/dated_file.dart';
part 'objects/passport_element_type.dart';
part 'objects/date.dart';
part 'objects/personal_details.dart';
part 'objects/identity_document.dart';
part 'objects/input_identity_document.dart';
part 'objects/personal_document.dart';
part 'objects/input_personal_document.dart';
part 'objects/passport_element.dart';
part 'objects/input_passport_element.dart';
part 'objects/passport_elements.dart';
part 'objects/passport_element_error_source.dart';
part 'objects/passport_element_error.dart';
part 'objects/passport_suitable_element.dart';
part 'objects/passport_required_element.dart';
part 'objects/passport_authorization_form.dart';
part 'objects/passport_elements_with_errors.dart';
part 'objects/encrypted_credentials.dart';
part 'objects/encrypted_passport_element.dart';
part 'objects/input_passport_element_error_source.dart';
part 'objects/input_passport_element_error.dart';
part 'objects/message_content.dart';
part 'objects/text_entity_type.dart';
part 'objects/input_thumbnail.dart';
part 'objects/message_scheduling_state.dart';
part 'objects/message_send_options.dart';
part 'objects/message_copy_options.dart';
part 'objects/input_message_content.dart';
part 'objects/search_messages_filter.dart';
part 'objects/chat_action.dart';
part 'objects/user_status.dart';
part 'objects/stickers.dart';
part 'objects/emojis.dart';
part 'objects/sticker_set.dart';
part 'objects/sticker_set_info.dart';
part 'objects/sticker_sets.dart';
part 'objects/trending_sticker_sets.dart';
part 'objects/call_discard_reason.dart';
part 'objects/call_protocol.dart';
part 'objects/call_server_type.dart';
part 'objects/call_server.dart';
part 'objects/call_id.dart';
part 'objects/group_call_id.dart';
part 'objects/call_state.dart';
part 'objects/group_call_video_quality.dart';
part 'objects/group_call_stream.dart';
part 'objects/group_call_streams.dart';
part 'objects/rtmp_url.dart';
part 'objects/group_call_recent_speaker.dart';
part 'objects/group_call.dart';
part 'objects/group_call_video_source_group.dart';
part 'objects/group_call_participant_video_info.dart';
part 'objects/group_call_participant.dart';
part 'objects/call_problem.dart';
part 'objects/call.dart';
part 'objects/phone_number_authentication_settings.dart';
part 'objects/added_reaction.dart';
part 'objects/added_reactions.dart';
part 'objects/available_reaction.dart';
part 'objects/available_reactions.dart';
part 'objects/emoji_reaction.dart';
part 'objects/animations.dart';
part 'objects/dice_stickers.dart';
part 'objects/imported_contacts.dart';
part 'objects/speech_recognition_result.dart';
part 'objects/attachment_menu_bot_color.dart';
part 'objects/attachment_menu_bot.dart';
part 'objects/sent_web_app_message.dart';
part 'objects/http_url.dart';
part 'objects/user_link.dart';
part 'objects/input_inline_query_result.dart';
part 'objects/inline_query_result.dart';
part 'objects/inline_query_results.dart';
part 'objects/callback_query_payload.dart';
part 'objects/callback_query_answer.dart';
part 'objects/custom_request_result.dart';
part 'objects/game_high_score.dart';
part 'objects/game_high_scores.dart';
part 'objects/chat_event_action.dart';
part 'objects/chat_event.dart';
part 'objects/chat_events.dart';
part 'objects/chat_event_log_filters.dart';
part 'objects/language_pack_string_value.dart';
part 'objects/language_pack_string.dart';
part 'objects/language_pack_strings.dart';
part 'objects/language_pack_info.dart';
part 'objects/localization_target_info.dart';
part 'objects/premium_limit_type.dart';
part 'objects/premium_feature.dart';
part 'objects/premium_limit.dart';
part 'objects/premium_features.dart';
part 'objects/premium_source.dart';
part 'objects/premium_feature_promotion_animation.dart';
part 'objects/premium_state.dart';
part 'objects/store_payment_purpose.dart';
part 'objects/device_token.dart';
part 'objects/push_receiver_id.dart';
part 'objects/background_fill.dart';
part 'objects/background_type.dart';
part 'objects/background.dart';
part 'objects/backgrounds.dart';
part 'objects/input_background.dart';
part 'objects/theme_settings.dart';
part 'objects/chat_theme.dart';
part 'objects/hashtags.dart';
part 'objects/can_transfer_ownership_result.dart';
part 'objects/check_chat_username_result.dart';
part 'objects/check_sticker_set_name_result.dart';
part 'objects/reset_password_result.dart';
part 'objects/message_file_type.dart';
part 'objects/push_message_content.dart';
part 'objects/notification_type.dart';
part 'objects/notification_group_type.dart';
part 'objects/notification_sound.dart';
part 'objects/notification_sounds.dart';
part 'objects/notification.dart';
part 'objects/notification_group.dart';
part 'objects/option_value.dart';
part 'objects/json_object_member.dart';
part 'objects/json_value.dart';
part 'objects/user_privacy_setting_rule.dart';
part 'objects/user_privacy_setting_rules.dart';
part 'objects/user_privacy_setting.dart';
part 'objects/account_ttl.dart';
part 'objects/message_auto_delete_time.dart';
part 'objects/session_type.dart';
part 'objects/session.dart';
part 'objects/sessions.dart';
part 'objects/connected_website.dart';
part 'objects/connected_websites.dart';
part 'objects/chat_report_reason.dart';
part 'objects/target_chat.dart';
part 'objects/internal_link_type.dart';
part 'objects/message_link.dart';
part 'objects/message_link_info.dart';
part 'objects/file_part.dart';
part 'objects/file_type.dart';
part 'objects/storage_statistics_by_file_type.dart';
part 'objects/storage_statistics_by_chat.dart';
part 'objects/storage_statistics.dart';
part 'objects/storage_statistics_fast.dart';
part 'objects/database_statistics.dart';
part 'objects/network_type.dart';
part 'objects/network_statistics_entry.dart';
part 'objects/network_statistics.dart';
part 'objects/auto_download_settings.dart';
part 'objects/auto_download_settings_presets.dart';
part 'objects/connection_state.dart';
part 'objects/top_chat_category.dart';
part 'objects/t_me_url_type.dart';
part 'objects/t_me_url.dart';
part 'objects/t_me_urls.dart';
part 'objects/suggested_action.dart';
part 'objects/count.dart';
part 'objects/text.dart';
part 'objects/seconds.dart';
part 'objects/file_downloaded_prefix_size.dart';
part 'objects/deep_link_info.dart';
part 'objects/text_parse_mode.dart';
part 'objects/proxy_type.dart';
part 'objects/proxy.dart';
part 'objects/proxies.dart';
part 'objects/input_sticker.dart';
part 'objects/date_range.dart';
part 'objects/statistical_value.dart';
part 'objects/statistical_graph.dart';
part 'objects/chat_statistics_message_interaction_info.dart';
part 'objects/chat_statistics_message_sender_info.dart';
part 'objects/chat_statistics_administrator_actions_info.dart';
part 'objects/chat_statistics_inviter_info.dart';
part 'objects/chat_statistics.dart';
part 'objects/message_statistics.dart';
part 'objects/point.dart';
part 'objects/vector_path_command.dart';
part 'objects/bot_command_scope.dart';
part 'objects/update.dart';
part 'objects/updates.dart';
part 'objects/log_stream.dart';
part 'objects/log_verbosity_level.dart';
part 'objects/log_tags.dart';
part 'objects/user_support_info.dart';
part 'objects/test_int.dart';
part 'objects/test_string.dart';
part 'objects/test_bytes.dart';
part 'objects/test_vector_int.dart';
part 'objects/test_vector_int_object.dart';
part 'objects/test_vector_string.dart';
part 'objects/test_vector_string_object.dart';
part 'functions/get_authorization_state.dart';
part 'functions/set_tdlib_parameters.dart';
part 'functions/set_authentication_phone_number.dart';
part 'functions/set_authentication_email_address.dart';
part 'functions/resend_authentication_code.dart';
part 'functions/check_authentication_email_code.dart';
part 'functions/check_authentication_code.dart';
part 'functions/request_qr_code_authentication.dart';
part 'functions/register_user.dart';
part 'functions/check_authentication_password.dart';
part 'functions/request_authentication_password_recovery.dart';
part 'functions/check_authentication_password_recovery_code.dart';
part 'functions/recover_authentication_password.dart';
part 'functions/check_authentication_bot_token.dart';
part 'functions/log_out.dart';
part 'functions/close.dart';
part 'functions/destroy.dart';
part 'functions/confirm_qr_code_authentication.dart';
part 'functions/get_current_state.dart';
part 'functions/set_database_encryption_key.dart';
part 'functions/get_password_state.dart';
part 'functions/set_password.dart';
part 'functions/set_login_email_address.dart';
part 'functions/resend_login_email_address_code.dart';
part 'functions/check_login_email_address_code.dart';
part 'functions/get_recovery_email_address.dart';
part 'functions/set_recovery_email_address.dart';
part 'functions/check_recovery_email_address_code.dart';
part 'functions/resend_recovery_email_address_code.dart';
part 'functions/request_password_recovery.dart';
part 'functions/check_password_recovery_code.dart';
part 'functions/recover_password.dart';
part 'functions/reset_password.dart';
part 'functions/cancel_password_reset.dart';
part 'functions/create_temporary_password.dart';
part 'functions/get_temporary_password_state.dart';
part 'functions/get_me.dart';
part 'functions/get_user.dart';
part 'functions/get_user_full_info.dart';
part 'functions/get_basic_group.dart';
part 'functions/get_basic_group_full_info.dart';
part 'functions/get_supergroup.dart';
part 'functions/get_supergroup_full_info.dart';
part 'functions/get_secret_chat.dart';
part 'functions/get_chat.dart';
part 'functions/get_message.dart';
part 'functions/get_message_locally.dart';
part 'functions/get_replied_message.dart';
part 'functions/get_chat_pinned_message.dart';
part 'functions/get_callback_query_message.dart';
part 'functions/get_messages.dart';
part 'functions/get_message_thread.dart';
part 'functions/get_message_viewers.dart';
part 'functions/get_file.dart';
part 'functions/get_remote_file.dart';
part 'functions/load_chats.dart';
part 'functions/get_chats.dart';
part 'functions/search_public_chat.dart';
part 'functions/search_public_chats.dart';
part 'functions/search_chats.dart';
part 'functions/search_chats_on_server.dart';
part 'functions/search_chats_nearby.dart';
part 'functions/get_top_chats.dart';
part 'functions/remove_top_chat.dart';
part 'functions/add_recently_found_chat.dart';
part 'functions/remove_recently_found_chat.dart';
part 'functions/clear_recently_found_chats.dart';
part 'functions/get_recently_opened_chats.dart';
part 'functions/check_chat_username.dart';
part 'functions/get_created_public_chats.dart';
part 'functions/check_created_public_chats_limit.dart';
part 'functions/get_suitable_discussion_chats.dart';
part 'functions/get_inactive_supergroup_chats.dart';
part 'functions/get_groups_in_common.dart';
part 'functions/get_chat_history.dart';
part 'functions/get_message_thread_history.dart';
part 'functions/delete_chat_history.dart';
part 'functions/delete_chat.dart';
part 'functions/search_chat_messages.dart';
part 'functions/search_messages.dart';
part 'functions/search_secret_messages.dart';
part 'functions/search_call_messages.dart';
part 'functions/search_outgoing_document_messages.dart';
part 'functions/delete_all_call_messages.dart';
part 'functions/search_chat_recent_location_messages.dart';
part 'functions/get_active_live_location_messages.dart';
part 'functions/get_chat_message_by_date.dart';
part 'functions/get_chat_sparse_message_positions.dart';
part 'functions/get_chat_message_calendar.dart';
part 'functions/get_chat_message_count.dart';
part 'functions/get_chat_message_position.dart';
part 'functions/get_chat_scheduled_messages.dart';
part 'functions/get_message_public_forwards.dart';
part 'functions/get_chat_sponsored_messages.dart';
part 'functions/remove_notification.dart';
part 'functions/remove_notification_group.dart';
part 'functions/get_message_link.dart';
part 'functions/get_message_embedding_code.dart';
part 'functions/get_message_link_info.dart';
part 'functions/translate_text.dart';
part 'functions/recognize_speech.dart';
part 'functions/rate_speech_recognition.dart';
part 'functions/get_chat_available_message_senders.dart';
part 'functions/set_chat_message_sender.dart';
part 'functions/send_message.dart';
part 'functions/send_message_album.dart';
part 'functions/send_bot_start_message.dart';
part 'functions/send_inline_query_result_message.dart';
part 'functions/forward_messages.dart';
part 'functions/resend_messages.dart';
part 'functions/send_chat_screenshot_taken_notification.dart';
part 'functions/add_local_message.dart';
part 'functions/delete_messages.dart';
part 'functions/delete_chat_messages_by_sender.dart';
part 'functions/delete_chat_messages_by_date.dart';
part 'functions/edit_message_text.dart';
part 'functions/edit_message_live_location.dart';
part 'functions/edit_message_media.dart';
part 'functions/edit_message_caption.dart';
part 'functions/edit_message_reply_markup.dart';
part 'functions/edit_inline_message_text.dart';
part 'functions/edit_inline_message_live_location.dart';
part 'functions/edit_inline_message_media.dart';
part 'functions/edit_inline_message_caption.dart';
part 'functions/edit_inline_message_reply_markup.dart';
part 'functions/edit_message_scheduling_state.dart';
part 'functions/get_forum_topic_default_icons.dart';
part 'functions/create_forum_topic.dart';
part 'functions/edit_forum_topic.dart';
part 'functions/get_forum_topic.dart';
part 'functions/get_forum_topic_link.dart';
part 'functions/get_forum_topics.dart';
part 'functions/set_forum_topic_notification_settings.dart';
part 'functions/toggle_forum_topic_is_closed.dart';
part 'functions/toggle_general_forum_topic_is_hidden.dart';
part 'functions/toggle_forum_topic_is_pinned.dart';
part 'functions/set_pinned_forum_topics.dart';
part 'functions/delete_forum_topic.dart';
part 'functions/get_emoji_reaction.dart';
part 'functions/get_custom_emoji_reaction_animations.dart';
part 'functions/get_message_available_reactions.dart';
part 'functions/clear_recent_reactions.dart';
part 'functions/add_message_reaction.dart';
part 'functions/remove_message_reaction.dart';
part 'functions/get_message_added_reactions.dart';
part 'functions/set_default_reaction_type.dart';
part 'functions/get_text_entities.dart';
part 'functions/parse_text_entities.dart';
part 'functions/parse_markdown.dart';
part 'functions/get_markdown_text.dart';
part 'functions/get_file_mime_type.dart';
part 'functions/get_file_extension.dart';
part 'functions/clean_file_name.dart';
part 'functions/get_language_pack_string.dart';
part 'functions/get_json_value.dart';
part 'functions/get_json_string.dart';
part 'functions/get_theme_parameters_json_string.dart';
part 'functions/set_poll_answer.dart';
part 'functions/get_poll_voters.dart';
part 'functions/stop_poll.dart';
part 'functions/hide_suggested_action.dart';
part 'functions/get_login_url_info.dart';
part 'functions/get_login_url.dart';
part 'functions/get_inline_query_results.dart';
part 'functions/answer_inline_query.dart';
part 'functions/get_web_app_url.dart';
part 'functions/send_web_app_data.dart';
part 'functions/open_web_app.dart';
part 'functions/close_web_app.dart';
part 'functions/answer_web_app_query.dart';
part 'functions/get_callback_query_answer.dart';
part 'functions/answer_callback_query.dart';
part 'functions/answer_shipping_query.dart';
part 'functions/answer_pre_checkout_query.dart';
part 'functions/set_game_score.dart';
part 'functions/set_inline_game_score.dart';
part 'functions/get_game_high_scores.dart';
part 'functions/get_inline_game_high_scores.dart';
part 'functions/delete_chat_reply_markup.dart';
part 'functions/send_chat_action.dart';
part 'functions/open_chat.dart';
part 'functions/close_chat.dart';
part 'functions/view_messages.dart';
part 'functions/open_message_content.dart';
part 'functions/click_animated_emoji_message.dart';
part 'functions/get_internal_link_type.dart';
part 'functions/get_external_link_info.dart';
part 'functions/get_external_link.dart';
part 'functions/read_all_chat_mentions.dart';
part 'functions/read_all_message_thread_mentions.dart';
part 'functions/read_all_chat_reactions.dart';
part 'functions/read_all_message_thread_reactions.dart';
part 'functions/create_private_chat.dart';
part 'functions/create_basic_group_chat.dart';
part 'functions/create_supergroup_chat.dart';
part 'functions/create_secret_chat.dart';
part 'functions/create_new_basic_group_chat.dart';
part 'functions/create_new_supergroup_chat.dart';
part 'functions/create_new_secret_chat.dart';
part 'functions/upgrade_basic_group_chat_to_supergroup_chat.dart';
part 'functions/get_chat_lists_to_add_chat.dart';
part 'functions/add_chat_to_list.dart';
part 'functions/get_chat_filter.dart';
part 'functions/create_chat_filter.dart';
part 'functions/edit_chat_filter.dart';
part 'functions/delete_chat_filter.dart';
part 'functions/reorder_chat_filters.dart';
part 'functions/get_recommended_chat_filters.dart';
part 'functions/get_chat_filter_default_icon_name.dart';
part 'functions/set_chat_title.dart';
part 'functions/set_chat_photo.dart';
part 'functions/set_chat_message_auto_delete_time.dart';
part 'functions/set_chat_permissions.dart';
part 'functions/set_chat_theme.dart';
part 'functions/set_chat_draft_message.dart';
part 'functions/set_chat_notification_settings.dart';
part 'functions/toggle_chat_has_protected_content.dart';
part 'functions/toggle_chat_is_marked_as_unread.dart';
part 'functions/toggle_chat_default_disable_notification.dart';
part 'functions/set_chat_available_reactions.dart';
part 'functions/set_chat_client_data.dart';
part 'functions/set_chat_description.dart';
part 'functions/set_chat_discussion_group.dart';
part 'functions/set_chat_location.dart';
part 'functions/set_chat_slow_mode_delay.dart';
part 'functions/pin_chat_message.dart';
part 'functions/unpin_chat_message.dart';
part 'functions/unpin_all_chat_messages.dart';
part 'functions/unpin_all_message_thread_messages.dart';
part 'functions/join_chat.dart';
part 'functions/leave_chat.dart';
part 'functions/add_chat_member.dart';
part 'functions/add_chat_members.dart';
part 'functions/set_chat_member_status.dart';
part 'functions/ban_chat_member.dart';
part 'functions/can_transfer_ownership.dart';
part 'functions/transfer_chat_ownership.dart';
part 'functions/get_chat_member.dart';
part 'functions/search_chat_members.dart';
part 'functions/get_chat_administrators.dart';
part 'functions/clear_all_draft_messages.dart';
part 'functions/get_saved_notification_sound.dart';
part 'functions/get_saved_notification_sounds.dart';
part 'functions/add_saved_notification_sound.dart';
part 'functions/remove_saved_notification_sound.dart';
part 'functions/get_chat_notification_settings_exceptions.dart';
part 'functions/get_scope_notification_settings.dart';
part 'functions/set_scope_notification_settings.dart';
part 'functions/reset_all_notification_settings.dart';
part 'functions/toggle_chat_is_pinned.dart';
part 'functions/set_pinned_chats.dart';
part 'functions/get_attachment_menu_bot.dart';
part 'functions/toggle_bot_is_added_to_attachment_menu.dart';
part 'functions/get_themed_emoji_statuses.dart';
part 'functions/get_recent_emoji_statuses.dart';
part 'functions/get_default_emoji_statuses.dart';
part 'functions/clear_recent_emoji_statuses.dart';
part 'functions/download_file.dart';
part 'functions/get_file_downloaded_prefix_size.dart';
part 'functions/cancel_download_file.dart';
part 'functions/get_suggested_file_name.dart';
part 'functions/preliminary_upload_file.dart';
part 'functions/cancel_preliminary_upload_file.dart';
part 'functions/write_generated_file_part.dart';
part 'functions/set_file_generation_progress.dart';
part 'functions/finish_file_generation.dart';
part 'functions/read_file_part.dart';
part 'functions/delete_file.dart';
part 'functions/add_file_to_downloads.dart';
part 'functions/toggle_download_is_paused.dart';
part 'functions/toggle_all_downloads_are_paused.dart';
part 'functions/remove_file_from_downloads.dart';
part 'functions/remove_all_files_from_downloads.dart';
part 'functions/search_file_downloads.dart';
part 'functions/get_message_file_type.dart';
part 'functions/get_message_import_confirmation_text.dart';
part 'functions/import_messages.dart';
part 'functions/replace_primary_chat_invite_link.dart';
part 'functions/create_chat_invite_link.dart';
part 'functions/edit_chat_invite_link.dart';
part 'functions/get_chat_invite_link.dart';
part 'functions/get_chat_invite_link_counts.dart';
part 'functions/get_chat_invite_links.dart';
part 'functions/get_chat_invite_link_members.dart';
part 'functions/revoke_chat_invite_link.dart';
part 'functions/delete_revoked_chat_invite_link.dart';
part 'functions/delete_all_revoked_chat_invite_links.dart';
part 'functions/check_chat_invite_link.dart';
part 'functions/join_chat_by_invite_link.dart';
part 'functions/get_chat_join_requests.dart';
part 'functions/process_chat_join_request.dart';
part 'functions/process_chat_join_requests.dart';
part 'functions/create_call.dart';
part 'functions/accept_call.dart';
part 'functions/send_call_signaling_data.dart';
part 'functions/discard_call.dart';
part 'functions/send_call_rating.dart';
part 'functions/send_call_debug_information.dart';
part 'functions/send_call_log.dart';
part 'functions/get_video_chat_available_participants.dart';
part 'functions/set_video_chat_default_participant.dart';
part 'functions/create_video_chat.dart';
part 'functions/get_video_chat_rtmp_url.dart';
part 'functions/replace_video_chat_rtmp_url.dart';
part 'functions/get_group_call.dart';
part 'functions/start_scheduled_group_call.dart';
part 'functions/toggle_group_call_enabled_start_notification.dart';
part 'functions/join_group_call.dart';
part 'functions/start_group_call_screen_sharing.dart';
part 'functions/toggle_group_call_screen_sharing_is_paused.dart';
part 'functions/end_group_call_screen_sharing.dart';
part 'functions/set_group_call_title.dart';
part 'functions/toggle_group_call_mute_new_participants.dart';
part 'functions/invite_group_call_participants.dart';
part 'functions/get_group_call_invite_link.dart';
part 'functions/revoke_group_call_invite_link.dart';
part 'functions/start_group_call_recording.dart';
part 'functions/end_group_call_recording.dart';
part 'functions/toggle_group_call_is_my_video_paused.dart';
part 'functions/toggle_group_call_is_my_video_enabled.dart';
part 'functions/set_group_call_participant_is_speaking.dart';
part 'functions/toggle_group_call_participant_is_muted.dart';
part 'functions/set_group_call_participant_volume_level.dart';
part 'functions/toggle_group_call_participant_is_hand_raised.dart';
part 'functions/load_group_call_participants.dart';
part 'functions/leave_group_call.dart';
part 'functions/end_group_call.dart';
part 'functions/get_group_call_streams.dart';
part 'functions/get_group_call_stream_segment.dart';
part 'functions/toggle_message_sender_is_blocked.dart';
part 'functions/block_message_sender_from_replies.dart';
part 'functions/get_blocked_message_senders.dart';
part 'functions/add_contact.dart';
part 'functions/import_contacts.dart';
part 'functions/get_contacts.dart';
part 'functions/search_contacts.dart';
part 'functions/remove_contacts.dart';
part 'functions/get_imported_contact_count.dart';
part 'functions/change_imported_contacts.dart';
part 'functions/clear_imported_contacts.dart';
part 'functions/set_user_personal_profile_photo.dart';
part 'functions/suggest_user_profile_photo.dart';
part 'functions/search_user_by_phone_number.dart';
part 'functions/share_phone_number.dart';
part 'functions/get_user_profile_photos.dart';
part 'functions/get_stickers.dart';
part 'functions/search_stickers.dart';
part 'functions/get_premium_stickers.dart';
part 'functions/get_installed_sticker_sets.dart';
part 'functions/get_archived_sticker_sets.dart';
part 'functions/get_trending_sticker_sets.dart';
part 'functions/get_attached_sticker_sets.dart';
part 'functions/get_sticker_set.dart';
part 'functions/search_sticker_set.dart';
part 'functions/search_installed_sticker_sets.dart';
part 'functions/search_sticker_sets.dart';
part 'functions/change_sticker_set.dart';
part 'functions/view_trending_sticker_sets.dart';
part 'functions/reorder_installed_sticker_sets.dart';
part 'functions/get_recent_stickers.dart';
part 'functions/add_recent_sticker.dart';
part 'functions/remove_recent_sticker.dart';
part 'functions/clear_recent_stickers.dart';
part 'functions/get_favorite_stickers.dart';
part 'functions/add_favorite_sticker.dart';
part 'functions/remove_favorite_sticker.dart';
part 'functions/get_sticker_emojis.dart';
part 'functions/search_emojis.dart';
part 'functions/get_animated_emoji.dart';
part 'functions/get_emoji_suggestions_url.dart';
part 'functions/get_custom_emoji_stickers.dart';
part 'functions/get_saved_animations.dart';
part 'functions/add_saved_animation.dart';
part 'functions/remove_saved_animation.dart';
part 'functions/get_recent_inline_bots.dart';
part 'functions/search_hashtags.dart';
part 'functions/remove_recent_hashtag.dart';
part 'functions/get_web_page_preview.dart';
part 'functions/get_web_page_instant_view.dart';
part 'functions/set_profile_photo.dart';
part 'functions/delete_profile_photo.dart';
part 'functions/set_name.dart';
part 'functions/set_bio.dart';
part 'functions/set_username.dart';
part 'functions/toggle_username_is_active.dart';
part 'functions/reorder_active_usernames.dart';
part 'functions/set_emoji_status.dart';
part 'functions/set_location.dart';
part 'functions/change_phone_number.dart';
part 'functions/resend_change_phone_number_code.dart';
part 'functions/check_change_phone_number_code.dart';
part 'functions/get_user_link.dart';
part 'functions/search_user_by_token.dart';
part 'functions/set_commands.dart';
part 'functions/delete_commands.dart';
part 'functions/get_commands.dart';
part 'functions/set_menu_button.dart';
part 'functions/get_menu_button.dart';
part 'functions/set_default_group_administrator_rights.dart';
part 'functions/set_default_channel_administrator_rights.dart';
part 'functions/get_active_sessions.dart';
part 'functions/terminate_session.dart';
part 'functions/terminate_all_other_sessions.dart';
part 'functions/toggle_session_can_accept_calls.dart';
part 'functions/toggle_session_can_accept_secret_chats.dart';
part 'functions/set_inactive_session_ttl.dart';
part 'functions/get_connected_websites.dart';
part 'functions/disconnect_website.dart';
part 'functions/disconnect_all_websites.dart';
part 'functions/set_supergroup_username.dart';
part 'functions/toggle_supergroup_username_is_active.dart';
part 'functions/disable_all_supergroup_usernames.dart';
part 'functions/reorder_supergroup_active_usernames.dart';
part 'functions/set_supergroup_sticker_set.dart';
part 'functions/toggle_supergroup_sign_messages.dart';
part 'functions/toggle_supergroup_join_to_send_messages.dart';
part 'functions/toggle_supergroup_join_by_request.dart';
part 'functions/toggle_supergroup_is_all_history_available.dart';
part 'functions/toggle_supergroup_has_hidden_members.dart';
part 'functions/toggle_supergroup_has_aggressive_anti_spam_enabled.dart';
part 'functions/toggle_supergroup_is_forum.dart';
part 'functions/toggle_supergroup_is_broadcast_group.dart';
part 'functions/report_supergroup_spam.dart';
part 'functions/report_supergroup_anti_spam_false_positive.dart';
part 'functions/get_supergroup_members.dart';
part 'functions/close_secret_chat.dart';
part 'functions/get_chat_event_log.dart';
part 'functions/get_payment_form.dart';
part 'functions/validate_order_info.dart';
part 'functions/send_payment_form.dart';
part 'functions/get_payment_receipt.dart';
part 'functions/get_saved_order_info.dart';
part 'functions/delete_saved_order_info.dart';
part 'functions/delete_saved_credentials.dart';
part 'functions/create_invoice_link.dart';
part 'functions/get_support_user.dart';
part 'functions/get_backgrounds.dart';
part 'functions/get_background_url.dart';
part 'functions/search_background.dart';
part 'functions/set_background.dart';
part 'functions/remove_background.dart';
part 'functions/reset_backgrounds.dart';
part 'functions/get_localization_target_info.dart';
part 'functions/get_language_pack_info.dart';
part 'functions/get_language_pack_strings.dart';
part 'functions/synchronize_language_pack.dart';
part 'functions/add_custom_server_language_pack.dart';
part 'functions/set_custom_language_pack.dart';
part 'functions/edit_custom_language_pack_info.dart';
part 'functions/set_custom_language_pack_string.dart';
part 'functions/delete_language_pack.dart';
part 'functions/register_device.dart';
part 'functions/process_push_notification.dart';
part 'functions/get_push_receiver_id.dart';
part 'functions/get_recently_visited_t_me_urls.dart';
part 'functions/set_user_privacy_setting_rules.dart';
part 'functions/get_user_privacy_setting_rules.dart';
part 'functions/get_option.dart';
part 'functions/set_option.dart';
part 'functions/set_account_ttl.dart';
part 'functions/get_account_ttl.dart';
part 'functions/delete_account.dart';
part 'functions/set_default_message_auto_delete_time.dart';
part 'functions/get_default_message_auto_delete_time.dart';
part 'functions/remove_chat_action_bar.dart';
part 'functions/report_chat.dart';
part 'functions/report_chat_photo.dart';
part 'functions/report_message_reactions.dart';
part 'functions/get_chat_statistics.dart';
part 'functions/get_message_statistics.dart';
part 'functions/get_statistical_graph.dart';
part 'functions/get_storage_statistics.dart';
part 'functions/get_storage_statistics_fast.dart';
part 'functions/get_database_statistics.dart';
part 'functions/optimize_storage.dart';
part 'functions/set_network_type.dart';
part 'functions/get_network_statistics.dart';
part 'functions/add_network_statistics.dart';
part 'functions/reset_network_statistics.dart';
part 'functions/get_auto_download_settings_presets.dart';
part 'functions/set_auto_download_settings.dart';
part 'functions/get_bank_card_info.dart';
part 'functions/get_passport_element.dart';
part 'functions/get_all_passport_elements.dart';
part 'functions/set_passport_element.dart';
part 'functions/delete_passport_element.dart';
part 'functions/set_passport_element_errors.dart';
part 'functions/get_preferred_country_language.dart';
part 'functions/send_phone_number_verification_code.dart';
part 'functions/resend_phone_number_verification_code.dart';
part 'functions/check_phone_number_verification_code.dart';
part 'functions/send_email_address_verification_code.dart';
part 'functions/resend_email_address_verification_code.dart';
part 'functions/check_email_address_verification_code.dart';
part 'functions/get_passport_authorization_form.dart';
part 'functions/get_passport_authorization_form_available_elements.dart';
part 'functions/send_passport_authorization_form.dart';
part 'functions/send_phone_number_confirmation_code.dart';
part 'functions/resend_phone_number_confirmation_code.dart';
part 'functions/check_phone_number_confirmation_code.dart';
part 'functions/set_bot_updates_status.dart';
part 'functions/upload_sticker_file.dart';
part 'functions/get_suggested_sticker_set_name.dart';
part 'functions/check_sticker_set_name.dart';
part 'functions/create_new_sticker_set.dart';
part 'functions/add_sticker_to_set.dart';
part 'functions/set_sticker_set_thumbnail.dart';
part 'functions/set_sticker_position_in_set.dart';
part 'functions/remove_sticker_from_set.dart';
part 'functions/get_map_thumbnail_file.dart';
part 'functions/get_premium_limit.dart';
part 'functions/get_premium_features.dart';
part 'functions/get_premium_sticker_examples.dart';
part 'functions/view_premium_feature.dart';
part 'functions/click_premium_subscription_button.dart';
part 'functions/get_premium_state.dart';
part 'functions/can_purchase_premium.dart';
part 'functions/assign_app_store_transaction.dart';
part 'functions/assign_google_play_transaction.dart';
part 'functions/accept_terms_of_service.dart';
part 'functions/send_custom_request.dart';
part 'functions/answer_custom_query.dart';
part 'functions/set_alarm.dart';
part 'functions/get_countries.dart';
part 'functions/get_country_code.dart';
part 'functions/get_phone_number_info.dart';
part 'functions/get_phone_number_info_sync.dart';
part 'functions/get_application_download_link.dart';
part 'functions/get_deep_link_info.dart';
part 'functions/get_application_config.dart';
part 'functions/save_application_log_event.dart';
part 'functions/add_proxy.dart';
part 'functions/edit_proxy.dart';
part 'functions/enable_proxy.dart';
part 'functions/disable_proxy.dart';
part 'functions/remove_proxy.dart';
part 'functions/get_proxies.dart';
part 'functions/get_proxy_link.dart';
part 'functions/ping_proxy.dart';
part 'functions/set_log_stream.dart';
part 'functions/get_log_stream.dart';
part 'functions/set_log_verbosity_level.dart';
part 'functions/get_log_verbosity_level.dart';
part 'functions/get_log_tags.dart';
part 'functions/set_log_tag_verbosity_level.dart';
part 'functions/get_log_tag_verbosity_level.dart';
part 'functions/add_log_message.dart';
part 'functions/get_user_support_info.dart';
part 'functions/set_user_support_info.dart';
part 'functions/test_call_empty.dart';
part 'functions/test_call_string.dart';
part 'functions/test_call_bytes.dart';
part 'functions/test_call_vector_int.dart';
part 'functions/test_call_vector_int_object.dart';
part 'functions/test_call_vector_string.dart';
part 'functions/test_call_vector_string_object.dart';
part 'functions/test_square_int.dart';
part 'functions/test_network.dart';
part 'functions/test_proxy.dart';
part 'functions/test_get_difference.dart';
part 'functions/test_use_update.dart';
part 'functions/test_return_error.dart';
TdObject? convertToObject(String? query) {
  if (query == null) return null;
  final newJson = json.decode(query);
  switch (newJson['@type']) {
    
    case 'error': return TdError.fromJson(newJson);
    case 'ok': return Ok.fromJson(newJson);
    case 'authenticationCodeType': return AuthenticationCodeType.fromJson(newJson);
    case 'authenticationCodeTypeTelegramMessage': return AuthenticationCodeTypeTelegramMessage.fromJson(newJson);
    case 'authenticationCodeTypeSms': return AuthenticationCodeTypeSms.fromJson(newJson);
    case 'authenticationCodeTypeCall': return AuthenticationCodeTypeCall.fromJson(newJson);
    case 'authenticationCodeTypeFlashCall': return AuthenticationCodeTypeFlashCall.fromJson(newJson);
    case 'authenticationCodeTypeMissedCall': return AuthenticationCodeTypeMissedCall.fromJson(newJson);
    case 'authenticationCodeTypeFragment': return AuthenticationCodeTypeFragment.fromJson(newJson);
    case 'authenticationCodeInfo': return AuthenticationCodeInfo.fromJson(newJson);
    case 'emailAddressAuthenticationCodeInfo': return EmailAddressAuthenticationCodeInfo.fromJson(newJson);
    case 'emailAddressAuthentication': return EmailAddressAuthentication.fromJson(newJson);
    case 'emailAddressAuthenticationCode': return EmailAddressAuthenticationCode.fromJson(newJson);
    case 'emailAddressAuthenticationAppleId': return EmailAddressAuthenticationAppleId.fromJson(newJson);
    case 'emailAddressAuthenticationGoogleId': return EmailAddressAuthenticationGoogleId.fromJson(newJson);
    case 'textEntity': return TextEntity.fromJson(newJson);
    case 'textEntities': return TextEntities.fromJson(newJson);
    case 'formattedText': return FormattedText.fromJson(newJson);
    case 'termsOfService': return TermsOfService.fromJson(newJson);
    case 'authorizationState': return AuthorizationState.fromJson(newJson);
    case 'authorizationStateWaitTdlibParameters': return AuthorizationStateWaitTdlibParameters.fromJson(newJson);
    case 'authorizationStateWaitPhoneNumber': return AuthorizationStateWaitPhoneNumber.fromJson(newJson);
    case 'authorizationStateWaitEmailAddress': return AuthorizationStateWaitEmailAddress.fromJson(newJson);
    case 'authorizationStateWaitEmailCode': return AuthorizationStateWaitEmailCode.fromJson(newJson);
    case 'authorizationStateWaitCode': return AuthorizationStateWaitCode.fromJson(newJson);
    case 'authorizationStateWaitOtherDeviceConfirmation': return AuthorizationStateWaitOtherDeviceConfirmation.fromJson(newJson);
    case 'authorizationStateWaitRegistration': return AuthorizationStateWaitRegistration.fromJson(newJson);
    case 'authorizationStateWaitPassword': return AuthorizationStateWaitPassword.fromJson(newJson);
    case 'authorizationStateReady': return AuthorizationStateReady.fromJson(newJson);
    case 'authorizationStateLoggingOut': return AuthorizationStateLoggingOut.fromJson(newJson);
    case 'authorizationStateClosing': return AuthorizationStateClosing.fromJson(newJson);
    case 'authorizationStateClosed': return AuthorizationStateClosed.fromJson(newJson);
    case 'passwordState': return PasswordState.fromJson(newJson);
    case 'recoveryEmailAddress': return RecoveryEmailAddress.fromJson(newJson);
    case 'temporaryPasswordState': return TemporaryPasswordState.fromJson(newJson);
    case 'localFile': return LocalFile.fromJson(newJson);
    case 'remoteFile': return RemoteFile.fromJson(newJson);
    case 'file': return File.fromJson(newJson);
    case 'inputFile': return InputFile.fromJson(newJson);
    case 'inputFileId': return InputFileId.fromJson(newJson);
    case 'inputFileRemote': return InputFileRemote.fromJson(newJson);
    case 'inputFileLocal': return InputFileLocal.fromJson(newJson);
    case 'inputFileGenerated': return InputFileGenerated.fromJson(newJson);
    case 'photoSize': return PhotoSize.fromJson(newJson);
    case 'minithumbnail': return Minithumbnail.fromJson(newJson);
    case 'thumbnailFormat': return ThumbnailFormat.fromJson(newJson);
    case 'thumbnailFormatJpeg': return ThumbnailFormatJpeg.fromJson(newJson);
    case 'thumbnailFormatGif': return ThumbnailFormatGif.fromJson(newJson);
    case 'thumbnailFormatMpeg4': return ThumbnailFormatMpeg4.fromJson(newJson);
    case 'thumbnailFormatPng': return ThumbnailFormatPng.fromJson(newJson);
    case 'thumbnailFormatTgs': return ThumbnailFormatTgs.fromJson(newJson);
    case 'thumbnailFormatWebm': return ThumbnailFormatWebm.fromJson(newJson);
    case 'thumbnailFormatWebp': return ThumbnailFormatWebp.fromJson(newJson);
    case 'thumbnail': return Thumbnail.fromJson(newJson);
    case 'maskPoint': return MaskPoint.fromJson(newJson);
    case 'maskPointForehead': return MaskPointForehead.fromJson(newJson);
    case 'maskPointEyes': return MaskPointEyes.fromJson(newJson);
    case 'maskPointMouth': return MaskPointMouth.fromJson(newJson);
    case 'maskPointChin': return MaskPointChin.fromJson(newJson);
    case 'maskPosition': return MaskPosition.fromJson(newJson);
    case 'stickerFormat': return StickerFormat.fromJson(newJson);
    case 'stickerFormatWebp': return StickerFormatWebp.fromJson(newJson);
    case 'stickerFormatTgs': return StickerFormatTgs.fromJson(newJson);
    case 'stickerFormatWebm': return StickerFormatWebm.fromJson(newJson);
    case 'stickerType': return StickerType.fromJson(newJson);
    case 'stickerTypeRegular': return StickerTypeRegular.fromJson(newJson);
    case 'stickerTypeMask': return StickerTypeMask.fromJson(newJson);
    case 'stickerTypeCustomEmoji': return StickerTypeCustomEmoji.fromJson(newJson);
    case 'stickerFullType': return StickerFullType.fromJson(newJson);
    case 'stickerFullTypeRegular': return StickerFullTypeRegular.fromJson(newJson);
    case 'stickerFullTypeMask': return StickerFullTypeMask.fromJson(newJson);
    case 'stickerFullTypeCustomEmoji': return StickerFullTypeCustomEmoji.fromJson(newJson);
    case 'closedVectorPath': return ClosedVectorPath.fromJson(newJson);
    case 'pollOption': return PollOption.fromJson(newJson);
    case 'pollType': return PollType.fromJson(newJson);
    case 'pollTypeRegular': return PollTypeRegular.fromJson(newJson);
    case 'pollTypeQuiz': return PollTypeQuiz.fromJson(newJson);
    case 'animation': return Animation.fromJson(newJson);
    case 'audio': return Audio.fromJson(newJson);
    case 'document': return Document.fromJson(newJson);
    case 'photo': return Photo.fromJson(newJson);
    case 'sticker': return Sticker.fromJson(newJson);
    case 'video': return Video.fromJson(newJson);
    case 'videoNote': return VideoNote.fromJson(newJson);
    case 'voiceNote': return VoiceNote.fromJson(newJson);
    case 'animatedEmoji': return AnimatedEmoji.fromJson(newJson);
    case 'contact': return Contact.fromJson(newJson);
    case 'location': return Location.fromJson(newJson);
    case 'venue': return Venue.fromJson(newJson);
    case 'game': return Game.fromJson(newJson);
    case 'poll': return Poll.fromJson(newJson);
    case 'profilePhoto': return ProfilePhoto.fromJson(newJson);
    case 'chatPhotoInfo': return ChatPhotoInfo.fromJson(newJson);
    case 'userType': return UserType.fromJson(newJson);
    case 'userTypeRegular': return UserTypeRegular.fromJson(newJson);
    case 'userTypeDeleted': return UserTypeDeleted.fromJson(newJson);
    case 'userTypeBot': return UserTypeBot.fromJson(newJson);
    case 'userTypeUnknown': return UserTypeUnknown.fromJson(newJson);
    case 'botCommand': return BotCommand.fromJson(newJson);
    case 'botCommands': return BotCommands.fromJson(newJson);
    case 'botMenuButton': return BotMenuButton.fromJson(newJson);
    case 'chatLocation': return ChatLocation.fromJson(newJson);
    case 'animatedChatPhoto': return AnimatedChatPhoto.fromJson(newJson);
    case 'chatPhoto': return ChatPhoto.fromJson(newJson);
    case 'chatPhotos': return ChatPhotos.fromJson(newJson);
    case 'inputChatPhoto': return InputChatPhoto.fromJson(newJson);
    case 'inputChatPhotoPrevious': return InputChatPhotoPrevious.fromJson(newJson);
    case 'inputChatPhotoStatic': return InputChatPhotoStatic.fromJson(newJson);
    case 'inputChatPhotoAnimation': return InputChatPhotoAnimation.fromJson(newJson);
    case 'chatPermissions': return ChatPermissions.fromJson(newJson);
    case 'chatAdministratorRights': return ChatAdministratorRights.fromJson(newJson);
    case 'premiumPaymentOption': return PremiumPaymentOption.fromJson(newJson);
    case 'emojiStatus': return EmojiStatus.fromJson(newJson);
    case 'emojiStatuses': return EmojiStatuses.fromJson(newJson);
    case 'usernames': return Usernames.fromJson(newJson);
    case 'user': return User.fromJson(newJson);
    case 'botInfo': return BotInfo.fromJson(newJson);
    case 'userFullInfo': return UserFullInfo.fromJson(newJson);
    case 'users': return Users.fromJson(newJson);
    case 'chatAdministrator': return ChatAdministrator.fromJson(newJson);
    case 'chatAdministrators': return ChatAdministrators.fromJson(newJson);
    case 'chatMemberStatus': return ChatMemberStatus.fromJson(newJson);
    case 'chatMemberStatusCreator': return ChatMemberStatusCreator.fromJson(newJson);
    case 'chatMemberStatusAdministrator': return ChatMemberStatusAdministrator.fromJson(newJson);
    case 'chatMemberStatusMember': return ChatMemberStatusMember.fromJson(newJson);
    case 'chatMemberStatusRestricted': return ChatMemberStatusRestricted.fromJson(newJson);
    case 'chatMemberStatusLeft': return ChatMemberStatusLeft.fromJson(newJson);
    case 'chatMemberStatusBanned': return ChatMemberStatusBanned.fromJson(newJson);
    case 'chatMember': return ChatMember.fromJson(newJson);
    case 'chatMembers': return ChatMembers.fromJson(newJson);
    case 'chatMembersFilter': return ChatMembersFilter.fromJson(newJson);
    case 'chatMembersFilterContacts': return ChatMembersFilterContacts.fromJson(newJson);
    case 'chatMembersFilterAdministrators': return ChatMembersFilterAdministrators.fromJson(newJson);
    case 'chatMembersFilterMembers': return ChatMembersFilterMembers.fromJson(newJson);
    case 'chatMembersFilterMention': return ChatMembersFilterMention.fromJson(newJson);
    case 'chatMembersFilterRestricted': return ChatMembersFilterRestricted.fromJson(newJson);
    case 'chatMembersFilterBanned': return ChatMembersFilterBanned.fromJson(newJson);
    case 'chatMembersFilterBots': return ChatMembersFilterBots.fromJson(newJson);
    case 'supergroupMembersFilter': return SupergroupMembersFilter.fromJson(newJson);
    case 'supergroupMembersFilterRecent': return SupergroupMembersFilterRecent.fromJson(newJson);
    case 'supergroupMembersFilterContacts': return SupergroupMembersFilterContacts.fromJson(newJson);
    case 'supergroupMembersFilterAdministrators': return SupergroupMembersFilterAdministrators.fromJson(newJson);
    case 'supergroupMembersFilterSearch': return SupergroupMembersFilterSearch.fromJson(newJson);
    case 'supergroupMembersFilterRestricted': return SupergroupMembersFilterRestricted.fromJson(newJson);
    case 'supergroupMembersFilterBanned': return SupergroupMembersFilterBanned.fromJson(newJson);
    case 'supergroupMembersFilterMention': return SupergroupMembersFilterMention.fromJson(newJson);
    case 'supergroupMembersFilterBots': return SupergroupMembersFilterBots.fromJson(newJson);
    case 'chatInviteLink': return ChatInviteLink.fromJson(newJson);
    case 'chatInviteLinks': return ChatInviteLinks.fromJson(newJson);
    case 'chatInviteLinkCount': return ChatInviteLinkCount.fromJson(newJson);
    case 'chatInviteLinkCounts': return ChatInviteLinkCounts.fromJson(newJson);
    case 'chatInviteLinkMember': return ChatInviteLinkMember.fromJson(newJson);
    case 'chatInviteLinkMembers': return ChatInviteLinkMembers.fromJson(newJson);
    case 'chatInviteLinkInfo': return ChatInviteLinkInfo.fromJson(newJson);
    case 'chatJoinRequest': return ChatJoinRequest.fromJson(newJson);
    case 'chatJoinRequests': return ChatJoinRequests.fromJson(newJson);
    case 'chatJoinRequestsInfo': return ChatJoinRequestsInfo.fromJson(newJson);
    case 'basicGroup': return BasicGroup.fromJson(newJson);
    case 'basicGroupFullInfo': return BasicGroupFullInfo.fromJson(newJson);
    case 'supergroup': return Supergroup.fromJson(newJson);
    case 'supergroupFullInfo': return SupergroupFullInfo.fromJson(newJson);
    case 'secretChatState': return SecretChatState.fromJson(newJson);
    case 'secretChatStatePending': return SecretChatStatePending.fromJson(newJson);
    case 'secretChatStateReady': return SecretChatStateReady.fromJson(newJson);
    case 'secretChatStateClosed': return SecretChatStateClosed.fromJson(newJson);
    case 'secretChat': return SecretChat.fromJson(newJson);
    case 'messageSender': return MessageSender.fromJson(newJson);
    case 'messageSenderUser': return MessageSenderUser.fromJson(newJson);
    case 'messageSenderChat': return MessageSenderChat.fromJson(newJson);
    case 'messageSenders': return MessageSenders.fromJson(newJson);
    case 'chatMessageSender': return ChatMessageSender.fromJson(newJson);
    case 'chatMessageSenders': return ChatMessageSenders.fromJson(newJson);
    case 'messageForwardOrigin': return MessageForwardOrigin.fromJson(newJson);
    case 'messageForwardOriginUser': return MessageForwardOriginUser.fromJson(newJson);
    case 'messageForwardOriginChat': return MessageForwardOriginChat.fromJson(newJson);
    case 'messageForwardOriginHiddenUser': return MessageForwardOriginHiddenUser.fromJson(newJson);
    case 'messageForwardOriginChannel': return MessageForwardOriginChannel.fromJson(newJson);
    case 'messageForwardOriginMessageImport': return MessageForwardOriginMessageImport.fromJson(newJson);
    case 'reactionType': return ReactionType.fromJson(newJson);
    case 'reactionTypeEmoji': return ReactionTypeEmoji.fromJson(newJson);
    case 'reactionTypeCustomEmoji': return ReactionTypeCustomEmoji.fromJson(newJson);
    case 'messageForwardInfo': return MessageForwardInfo.fromJson(newJson);
    case 'messageReplyInfo': return MessageReplyInfo.fromJson(newJson);
    case 'messageReaction': return MessageReaction.fromJson(newJson);
    case 'messageInteractionInfo': return MessageInteractionInfo.fromJson(newJson);
    case 'unreadReaction': return UnreadReaction.fromJson(newJson);
    case 'messageSendingState': return MessageSendingState.fromJson(newJson);
    case 'messageSendingStatePending': return MessageSendingStatePending.fromJson(newJson);
    case 'messageSendingStateFailed': return MessageSendingStateFailed.fromJson(newJson);
    case 'message': return Message.fromJson(newJson);
    case 'messages': return Messages.fromJson(newJson);
    case 'foundMessages': return FoundMessages.fromJson(newJson);
    case 'foundChatMessages': return FoundChatMessages.fromJson(newJson);
    case 'messagePosition': return MessagePosition.fromJson(newJson);
    case 'messagePositions': return MessagePositions.fromJson(newJson);
    case 'messageCalendarDay': return MessageCalendarDay.fromJson(newJson);
    case 'messageCalendar': return MessageCalendar.fromJson(newJson);
    case 'sponsoredMessage': return SponsoredMessage.fromJson(newJson);
    case 'sponsoredMessages': return SponsoredMessages.fromJson(newJson);
    case 'fileDownload': return FileDownload.fromJson(newJson);
    case 'downloadedFileCounts': return DownloadedFileCounts.fromJson(newJson);
    case 'foundFileDownloads': return FoundFileDownloads.fromJson(newJson);
    case 'notificationSettingsScope': return NotificationSettingsScope.fromJson(newJson);
    case 'notificationSettingsScopePrivateChats': return NotificationSettingsScopePrivateChats.fromJson(newJson);
    case 'notificationSettingsScopeGroupChats': return NotificationSettingsScopeGroupChats.fromJson(newJson);
    case 'notificationSettingsScopeChannelChats': return NotificationSettingsScopeChannelChats.fromJson(newJson);
    case 'chatNotificationSettings': return ChatNotificationSettings.fromJson(newJson);
    case 'scopeNotificationSettings': return ScopeNotificationSettings.fromJson(newJson);
    case 'draftMessage': return DraftMessage.fromJson(newJson);
    case 'chatType': return ChatType.fromJson(newJson);
    case 'chatTypePrivate': return ChatTypePrivate.fromJson(newJson);
    case 'chatTypeBasicGroup': return ChatTypeBasicGroup.fromJson(newJson);
    case 'chatTypeSupergroup': return ChatTypeSupergroup.fromJson(newJson);
    case 'chatTypeSecret': return ChatTypeSecret.fromJson(newJson);
    case 'chatFilter': return ChatFilter.fromJson(newJson);
    case 'chatFilterInfo': return ChatFilterInfo.fromJson(newJson);
    case 'recommendedChatFilter': return RecommendedChatFilter.fromJson(newJson);
    case 'recommendedChatFilters': return RecommendedChatFilters.fromJson(newJson);
    case 'chatList': return ChatList.fromJson(newJson);
    case 'chatListMain': return ChatListMain.fromJson(newJson);
    case 'chatListArchive': return ChatListArchive.fromJson(newJson);
    case 'chatListFilter': return ChatListFilter.fromJson(newJson);
    case 'chatLists': return ChatLists.fromJson(newJson);
    case 'chatSource': return ChatSource.fromJson(newJson);
    case 'chatSourceMtprotoProxy': return ChatSourceMtprotoProxy.fromJson(newJson);
    case 'chatSourcePublicServiceAnnouncement': return ChatSourcePublicServiceAnnouncement.fromJson(newJson);
    case 'chatPosition': return ChatPosition.fromJson(newJson);
    case 'chatAvailableReactions': return ChatAvailableReactions.fromJson(newJson);
    case 'chatAvailableReactionsAll': return ChatAvailableReactionsAll.fromJson(newJson);
    case 'chatAvailableReactionsSome': return ChatAvailableReactionsSome.fromJson(newJson);
    case 'videoChat': return VideoChat.fromJson(newJson);
    case 'chat': return Chat.fromJson(newJson);
    case 'chats': return Chats.fromJson(newJson);
    case 'chatNearby': return ChatNearby.fromJson(newJson);
    case 'chatsNearby': return ChatsNearby.fromJson(newJson);
    case 'publicChatType': return PublicChatType.fromJson(newJson);
    case 'publicChatTypeHasUsername': return PublicChatTypeHasUsername.fromJson(newJson);
    case 'publicChatTypeIsLocationBased': return PublicChatTypeIsLocationBased.fromJson(newJson);
    case 'chatActionBar': return ChatActionBar.fromJson(newJson);
    case 'chatActionBarReportSpam': return ChatActionBarReportSpam.fromJson(newJson);
    case 'chatActionBarReportUnrelatedLocation': return ChatActionBarReportUnrelatedLocation.fromJson(newJson);
    case 'chatActionBarInviteMembers': return ChatActionBarInviteMembers.fromJson(newJson);
    case 'chatActionBarReportAddBlock': return ChatActionBarReportAddBlock.fromJson(newJson);
    case 'chatActionBarAddContact': return ChatActionBarAddContact.fromJson(newJson);
    case 'chatActionBarSharePhoneNumber': return ChatActionBarSharePhoneNumber.fromJson(newJson);
    case 'chatActionBarJoinRequest': return ChatActionBarJoinRequest.fromJson(newJson);
    case 'keyboardButtonType': return KeyboardButtonType.fromJson(newJson);
    case 'keyboardButtonTypeText': return KeyboardButtonTypeText.fromJson(newJson);
    case 'keyboardButtonTypeRequestPhoneNumber': return KeyboardButtonTypeRequestPhoneNumber.fromJson(newJson);
    case 'keyboardButtonTypeRequestLocation': return KeyboardButtonTypeRequestLocation.fromJson(newJson);
    case 'keyboardButtonTypeRequestPoll': return KeyboardButtonTypeRequestPoll.fromJson(newJson);
    case 'keyboardButtonTypeWebApp': return KeyboardButtonTypeWebApp.fromJson(newJson);
    case 'keyboardButton': return KeyboardButton.fromJson(newJson);
    case 'inlineKeyboardButtonType': return InlineKeyboardButtonType.fromJson(newJson);
    case 'inlineKeyboardButtonTypeUrl': return InlineKeyboardButtonTypeUrl.fromJson(newJson);
    case 'inlineKeyboardButtonTypeLoginUrl': return InlineKeyboardButtonTypeLoginUrl.fromJson(newJson);
    case 'inlineKeyboardButtonTypeWebApp': return InlineKeyboardButtonTypeWebApp.fromJson(newJson);
    case 'inlineKeyboardButtonTypeCallback': return InlineKeyboardButtonTypeCallback.fromJson(newJson);
    case 'inlineKeyboardButtonTypeCallbackWithPassword': return InlineKeyboardButtonTypeCallbackWithPassword.fromJson(newJson);
    case 'inlineKeyboardButtonTypeCallbackGame': return InlineKeyboardButtonTypeCallbackGame.fromJson(newJson);
    case 'inlineKeyboardButtonTypeSwitchInline': return InlineKeyboardButtonTypeSwitchInline.fromJson(newJson);
    case 'inlineKeyboardButtonTypeBuy': return InlineKeyboardButtonTypeBuy.fromJson(newJson);
    case 'inlineKeyboardButtonTypeUser': return InlineKeyboardButtonTypeUser.fromJson(newJson);
    case 'inlineKeyboardButton': return InlineKeyboardButton.fromJson(newJson);
    case 'replyMarkup': return ReplyMarkup.fromJson(newJson);
    case 'replyMarkupRemoveKeyboard': return ReplyMarkupRemoveKeyboard.fromJson(newJson);
    case 'replyMarkupForceReply': return ReplyMarkupForceReply.fromJson(newJson);
    case 'replyMarkupShowKeyboard': return ReplyMarkupShowKeyboard.fromJson(newJson);
    case 'replyMarkupInlineKeyboard': return ReplyMarkupInlineKeyboard.fromJson(newJson);
    case 'loginUrlInfo': return LoginUrlInfo.fromJson(newJson);
    case 'loginUrlInfoOpen': return LoginUrlInfoOpen.fromJson(newJson);
    case 'loginUrlInfoRequestConfirmation': return LoginUrlInfoRequestConfirmation.fromJson(newJson);
    case 'webAppInfo': return WebAppInfo.fromJson(newJson);
    case 'messageThreadInfo': return MessageThreadInfo.fromJson(newJson);
    case 'forumTopicIcon': return ForumTopicIcon.fromJson(newJson);
    case 'forumTopicInfo': return ForumTopicInfo.fromJson(newJson);
    case 'forumTopic': return ForumTopic.fromJson(newJson);
    case 'forumTopics': return ForumTopics.fromJson(newJson);
    case 'richText': return RichText.fromJson(newJson);
    case 'richTextPlain': return RichTextPlain.fromJson(newJson);
    case 'richTextBold': return RichTextBold.fromJson(newJson);
    case 'richTextItalic': return RichTextItalic.fromJson(newJson);
    case 'richTextUnderline': return RichTextUnderline.fromJson(newJson);
    case 'richTextStrikethrough': return RichTextStrikethrough.fromJson(newJson);
    case 'richTextFixed': return RichTextFixed.fromJson(newJson);
    case 'richTextUrl': return RichTextUrl.fromJson(newJson);
    case 'richTextEmailAddress': return RichTextEmailAddress.fromJson(newJson);
    case 'richTextSubscript': return RichTextSubscript.fromJson(newJson);
    case 'richTextSuperscript': return RichTextSuperscript.fromJson(newJson);
    case 'richTextMarked': return RichTextMarked.fromJson(newJson);
    case 'richTextPhoneNumber': return RichTextPhoneNumber.fromJson(newJson);
    case 'richTextIcon': return RichTextIcon.fromJson(newJson);
    case 'richTextReference': return RichTextReference.fromJson(newJson);
    case 'richTextAnchor': return RichTextAnchor.fromJson(newJson);
    case 'richTextAnchorLink': return RichTextAnchorLink.fromJson(newJson);
    case 'richTexts': return RichTexts.fromJson(newJson);
    case 'pageBlockCaption': return PageBlockCaption.fromJson(newJson);
    case 'pageBlockListItem': return PageBlockListItem.fromJson(newJson);
    case 'pageBlockHorizontalAlignment': return PageBlockHorizontalAlignment.fromJson(newJson);
    case 'pageBlockHorizontalAlignmentLeft': return PageBlockHorizontalAlignmentLeft.fromJson(newJson);
    case 'pageBlockHorizontalAlignmentCenter': return PageBlockHorizontalAlignmentCenter.fromJson(newJson);
    case 'pageBlockHorizontalAlignmentRight': return PageBlockHorizontalAlignmentRight.fromJson(newJson);
    case 'pageBlockVerticalAlignment': return PageBlockVerticalAlignment.fromJson(newJson);
    case 'pageBlockVerticalAlignmentTop': return PageBlockVerticalAlignmentTop.fromJson(newJson);
    case 'pageBlockVerticalAlignmentMiddle': return PageBlockVerticalAlignmentMiddle.fromJson(newJson);
    case 'pageBlockVerticalAlignmentBottom': return PageBlockVerticalAlignmentBottom.fromJson(newJson);
    case 'pageBlockTableCell': return PageBlockTableCell.fromJson(newJson);
    case 'pageBlockRelatedArticle': return PageBlockRelatedArticle.fromJson(newJson);
    case 'pageBlock': return PageBlock.fromJson(newJson);
    case 'pageBlockTitle': return PageBlockTitle.fromJson(newJson);
    case 'pageBlockSubtitle': return PageBlockSubtitle.fromJson(newJson);
    case 'pageBlockAuthorDate': return PageBlockAuthorDate.fromJson(newJson);
    case 'pageBlockHeader': return PageBlockHeader.fromJson(newJson);
    case 'pageBlockSubheader': return PageBlockSubheader.fromJson(newJson);
    case 'pageBlockKicker': return PageBlockKicker.fromJson(newJson);
    case 'pageBlockParagraph': return PageBlockParagraph.fromJson(newJson);
    case 'pageBlockPreformatted': return PageBlockPreformatted.fromJson(newJson);
    case 'pageBlockFooter': return PageBlockFooter.fromJson(newJson);
    case 'pageBlockDivider': return PageBlockDivider.fromJson(newJson);
    case 'pageBlockAnchor': return PageBlockAnchor.fromJson(newJson);
    case 'pageBlockList': return PageBlockList.fromJson(newJson);
    case 'pageBlockBlockQuote': return PageBlockBlockQuote.fromJson(newJson);
    case 'pageBlockPullQuote': return PageBlockPullQuote.fromJson(newJson);
    case 'pageBlockAnimation': return PageBlockAnimation.fromJson(newJson);
    case 'pageBlockAudio': return PageBlockAudio.fromJson(newJson);
    case 'pageBlockPhoto': return PageBlockPhoto.fromJson(newJson);
    case 'pageBlockVideo': return PageBlockVideo.fromJson(newJson);
    case 'pageBlockVoiceNote': return PageBlockVoiceNote.fromJson(newJson);
    case 'pageBlockCover': return PageBlockCover.fromJson(newJson);
    case 'pageBlockEmbedded': return PageBlockEmbedded.fromJson(newJson);
    case 'pageBlockEmbeddedPost': return PageBlockEmbeddedPost.fromJson(newJson);
    case 'pageBlockCollage': return PageBlockCollage.fromJson(newJson);
    case 'pageBlockSlideshow': return PageBlockSlideshow.fromJson(newJson);
    case 'pageBlockChatLink': return PageBlockChatLink.fromJson(newJson);
    case 'pageBlockTable': return PageBlockTable.fromJson(newJson);
    case 'pageBlockDetails': return PageBlockDetails.fromJson(newJson);
    case 'pageBlockRelatedArticles': return PageBlockRelatedArticles.fromJson(newJson);
    case 'pageBlockMap': return PageBlockMap.fromJson(newJson);
    case 'webPageInstantView': return WebPageInstantView.fromJson(newJson);
    case 'webPage': return WebPage.fromJson(newJson);
    case 'countryInfo': return CountryInfo.fromJson(newJson);
    case 'countries': return Countries.fromJson(newJson);
    case 'phoneNumberInfo': return PhoneNumberInfo.fromJson(newJson);
    case 'bankCardActionOpenUrl': return BankCardActionOpenUrl.fromJson(newJson);
    case 'bankCardInfo': return BankCardInfo.fromJson(newJson);
    case 'address': return Address.fromJson(newJson);
    case 'themeParameters': return ThemeParameters.fromJson(newJson);
    case 'labeledPricePart': return LabeledPricePart.fromJson(newJson);
    case 'invoice': return Invoice.fromJson(newJson);
    case 'orderInfo': return OrderInfo.fromJson(newJson);
    case 'shippingOption': return ShippingOption.fromJson(newJson);
    case 'savedCredentials': return SavedCredentials.fromJson(newJson);
    case 'inputCredentials': return InputCredentials.fromJson(newJson);
    case 'inputCredentialsSaved': return InputCredentialsSaved.fromJson(newJson);
    case 'inputCredentialsNew': return InputCredentialsNew.fromJson(newJson);
    case 'inputCredentialsApplePay': return InputCredentialsApplePay.fromJson(newJson);
    case 'inputCredentialsGooglePay': return InputCredentialsGooglePay.fromJson(newJson);
    case 'paymentProvider': return PaymentProvider.fromJson(newJson);
    case 'paymentProviderSmartGlocal': return PaymentProviderSmartGlocal.fromJson(newJson);
    case 'paymentProviderStripe': return PaymentProviderStripe.fromJson(newJson);
    case 'paymentProviderOther': return PaymentProviderOther.fromJson(newJson);
    case 'paymentOption': return PaymentOption.fromJson(newJson);
    case 'paymentForm': return PaymentForm.fromJson(newJson);
    case 'validatedOrderInfo': return ValidatedOrderInfo.fromJson(newJson);
    case 'paymentResult': return PaymentResult.fromJson(newJson);
    case 'paymentReceipt': return PaymentReceipt.fromJson(newJson);
    case 'inputInvoice': return InputInvoice.fromJson(newJson);
    case 'inputInvoiceMessage': return InputInvoiceMessage.fromJson(newJson);
    case 'inputInvoiceName': return InputInvoiceName.fromJson(newJson);
    case 'messageExtendedMedia': return MessageExtendedMedia.fromJson(newJson);
    case 'messageExtendedMediaPreview': return MessageExtendedMediaPreview.fromJson(newJson);
    case 'messageExtendedMediaPhoto': return MessageExtendedMediaPhoto.fromJson(newJson);
    case 'messageExtendedMediaVideo': return MessageExtendedMediaVideo.fromJson(newJson);
    case 'messageExtendedMediaUnsupported': return MessageExtendedMediaUnsupported.fromJson(newJson);
    case 'datedFile': return DatedFile.fromJson(newJson);
    case 'passportElementType': return PassportElementType.fromJson(newJson);
    case 'passportElementTypePersonalDetails': return PassportElementTypePersonalDetails.fromJson(newJson);
    case 'passportElementTypePassport': return PassportElementTypePassport.fromJson(newJson);
    case 'passportElementTypeDriverLicense': return PassportElementTypeDriverLicense.fromJson(newJson);
    case 'passportElementTypeIdentityCard': return PassportElementTypeIdentityCard.fromJson(newJson);
    case 'passportElementTypeInternalPassport': return PassportElementTypeInternalPassport.fromJson(newJson);
    case 'passportElementTypeAddress': return PassportElementTypeAddress.fromJson(newJson);
    case 'passportElementTypeUtilityBill': return PassportElementTypeUtilityBill.fromJson(newJson);
    case 'passportElementTypeBankStatement': return PassportElementTypeBankStatement.fromJson(newJson);
    case 'passportElementTypeRentalAgreement': return PassportElementTypeRentalAgreement.fromJson(newJson);
    case 'passportElementTypePassportRegistration': return PassportElementTypePassportRegistration.fromJson(newJson);
    case 'passportElementTypeTemporaryRegistration': return PassportElementTypeTemporaryRegistration.fromJson(newJson);
    case 'passportElementTypePhoneNumber': return PassportElementTypePhoneNumber.fromJson(newJson);
    case 'passportElementTypeEmailAddress': return PassportElementTypeEmailAddress.fromJson(newJson);
    case 'date': return Date.fromJson(newJson);
    case 'personalDetails': return PersonalDetails.fromJson(newJson);
    case 'identityDocument': return IdentityDocument.fromJson(newJson);
    case 'inputIdentityDocument': return InputIdentityDocument.fromJson(newJson);
    case 'personalDocument': return PersonalDocument.fromJson(newJson);
    case 'inputPersonalDocument': return InputPersonalDocument.fromJson(newJson);
    case 'passportElement': return PassportElement.fromJson(newJson);
    case 'passportElementPersonalDetails': return PassportElementPersonalDetails.fromJson(newJson);
    case 'passportElementPassport': return PassportElementPassport.fromJson(newJson);
    case 'passportElementDriverLicense': return PassportElementDriverLicense.fromJson(newJson);
    case 'passportElementIdentityCard': return PassportElementIdentityCard.fromJson(newJson);
    case 'passportElementInternalPassport': return PassportElementInternalPassport.fromJson(newJson);
    case 'passportElementAddress': return PassportElementAddress.fromJson(newJson);
    case 'passportElementUtilityBill': return PassportElementUtilityBill.fromJson(newJson);
    case 'passportElementBankStatement': return PassportElementBankStatement.fromJson(newJson);
    case 'passportElementRentalAgreement': return PassportElementRentalAgreement.fromJson(newJson);
    case 'passportElementPassportRegistration': return PassportElementPassportRegistration.fromJson(newJson);
    case 'passportElementTemporaryRegistration': return PassportElementTemporaryRegistration.fromJson(newJson);
    case 'passportElementPhoneNumber': return PassportElementPhoneNumber.fromJson(newJson);
    case 'passportElementEmailAddress': return PassportElementEmailAddress.fromJson(newJson);
    case 'inputPassportElement': return InputPassportElement.fromJson(newJson);
    case 'inputPassportElementPersonalDetails': return InputPassportElementPersonalDetails.fromJson(newJson);
    case 'inputPassportElementPassport': return InputPassportElementPassport.fromJson(newJson);
    case 'inputPassportElementDriverLicense': return InputPassportElementDriverLicense.fromJson(newJson);
    case 'inputPassportElementIdentityCard': return InputPassportElementIdentityCard.fromJson(newJson);
    case 'inputPassportElementInternalPassport': return InputPassportElementInternalPassport.fromJson(newJson);
    case 'inputPassportElementAddress': return InputPassportElementAddress.fromJson(newJson);
    case 'inputPassportElementUtilityBill': return InputPassportElementUtilityBill.fromJson(newJson);
    case 'inputPassportElementBankStatement': return InputPassportElementBankStatement.fromJson(newJson);
    case 'inputPassportElementRentalAgreement': return InputPassportElementRentalAgreement.fromJson(newJson);
    case 'inputPassportElementPassportRegistration': return InputPassportElementPassportRegistration.fromJson(newJson);
    case 'inputPassportElementTemporaryRegistration': return InputPassportElementTemporaryRegistration.fromJson(newJson);
    case 'inputPassportElementPhoneNumber': return InputPassportElementPhoneNumber.fromJson(newJson);
    case 'inputPassportElementEmailAddress': return InputPassportElementEmailAddress.fromJson(newJson);
    case 'passportElements': return PassportElements.fromJson(newJson);
    case 'passportElementErrorSource': return PassportElementErrorSource.fromJson(newJson);
    case 'passportElementErrorSourceUnspecified': return PassportElementErrorSourceUnspecified.fromJson(newJson);
    case 'passportElementErrorSourceDataField': return PassportElementErrorSourceDataField.fromJson(newJson);
    case 'passportElementErrorSourceFrontSide': return PassportElementErrorSourceFrontSide.fromJson(newJson);
    case 'passportElementErrorSourceReverseSide': return PassportElementErrorSourceReverseSide.fromJson(newJson);
    case 'passportElementErrorSourceSelfie': return PassportElementErrorSourceSelfie.fromJson(newJson);
    case 'passportElementErrorSourceTranslationFile': return PassportElementErrorSourceTranslationFile.fromJson(newJson);
    case 'passportElementErrorSourceTranslationFiles': return PassportElementErrorSourceTranslationFiles.fromJson(newJson);
    case 'passportElementErrorSourceFile': return PassportElementErrorSourceFile.fromJson(newJson);
    case 'passportElementErrorSourceFiles': return PassportElementErrorSourceFiles.fromJson(newJson);
    case 'passportElementError': return PassportElementError.fromJson(newJson);
    case 'passportSuitableElement': return PassportSuitableElement.fromJson(newJson);
    case 'passportRequiredElement': return PassportRequiredElement.fromJson(newJson);
    case 'passportAuthorizationForm': return PassportAuthorizationForm.fromJson(newJson);
    case 'passportElementsWithErrors': return PassportElementsWithErrors.fromJson(newJson);
    case 'encryptedCredentials': return EncryptedCredentials.fromJson(newJson);
    case 'encryptedPassportElement': return EncryptedPassportElement.fromJson(newJson);
    case 'inputPassportElementErrorSource': return InputPassportElementErrorSource.fromJson(newJson);
    case 'inputPassportElementErrorSourceUnspecified': return InputPassportElementErrorSourceUnspecified.fromJson(newJson);
    case 'inputPassportElementErrorSourceDataField': return InputPassportElementErrorSourceDataField.fromJson(newJson);
    case 'inputPassportElementErrorSourceFrontSide': return InputPassportElementErrorSourceFrontSide.fromJson(newJson);
    case 'inputPassportElementErrorSourceReverseSide': return InputPassportElementErrorSourceReverseSide.fromJson(newJson);
    case 'inputPassportElementErrorSourceSelfie': return InputPassportElementErrorSourceSelfie.fromJson(newJson);
    case 'inputPassportElementErrorSourceTranslationFile': return InputPassportElementErrorSourceTranslationFile.fromJson(newJson);
    case 'inputPassportElementErrorSourceTranslationFiles': return InputPassportElementErrorSourceTranslationFiles.fromJson(newJson);
    case 'inputPassportElementErrorSourceFile': return InputPassportElementErrorSourceFile.fromJson(newJson);
    case 'inputPassportElementErrorSourceFiles': return InputPassportElementErrorSourceFiles.fromJson(newJson);
    case 'inputPassportElementError': return InputPassportElementError.fromJson(newJson);
    case 'messageContent': return MessageContent.fromJson(newJson);
    case 'messageText': return MessageText.fromJson(newJson);
    case 'messageAnimation': return MessageAnimation.fromJson(newJson);
    case 'messageAudio': return MessageAudio.fromJson(newJson);
    case 'messageDocument': return MessageDocument.fromJson(newJson);
    case 'messagePhoto': return MessagePhoto.fromJson(newJson);
    case 'messageExpiredPhoto': return MessageExpiredPhoto.fromJson(newJson);
    case 'messageSticker': return MessageSticker.fromJson(newJson);
    case 'messageVideo': return MessageVideo.fromJson(newJson);
    case 'messageExpiredVideo': return MessageExpiredVideo.fromJson(newJson);
    case 'messageVideoNote': return MessageVideoNote.fromJson(newJson);
    case 'messageVoiceNote': return MessageVoiceNote.fromJson(newJson);
    case 'messageLocation': return MessageLocation.fromJson(newJson);
    case 'messageVenue': return MessageVenue.fromJson(newJson);
    case 'messageContact': return MessageContact.fromJson(newJson);
    case 'messageAnimatedEmoji': return MessageAnimatedEmoji.fromJson(newJson);
    case 'messageDice': return MessageDice.fromJson(newJson);
    case 'messageGame': return MessageGame.fromJson(newJson);
    case 'messagePoll': return MessagePoll.fromJson(newJson);
    case 'messageInvoice': return MessageInvoice.fromJson(newJson);
    case 'messageCall': return MessageCall.fromJson(newJson);
    case 'messageVideoChatScheduled': return MessageVideoChatScheduled.fromJson(newJson);
    case 'messageVideoChatStarted': return MessageVideoChatStarted.fromJson(newJson);
    case 'messageVideoChatEnded': return MessageVideoChatEnded.fromJson(newJson);
    case 'messageInviteVideoChatParticipants': return MessageInviteVideoChatParticipants.fromJson(newJson);
    case 'messageBasicGroupChatCreate': return MessageBasicGroupChatCreate.fromJson(newJson);
    case 'messageSupergroupChatCreate': return MessageSupergroupChatCreate.fromJson(newJson);
    case 'messageChatChangeTitle': return MessageChatChangeTitle.fromJson(newJson);
    case 'messageChatChangePhoto': return MessageChatChangePhoto.fromJson(newJson);
    case 'messageChatDeletePhoto': return MessageChatDeletePhoto.fromJson(newJson);
    case 'messageChatAddMembers': return MessageChatAddMembers.fromJson(newJson);
    case 'messageChatJoinByLink': return MessageChatJoinByLink.fromJson(newJson);
    case 'messageChatJoinByRequest': return MessageChatJoinByRequest.fromJson(newJson);
    case 'messageChatDeleteMember': return MessageChatDeleteMember.fromJson(newJson);
    case 'messageChatUpgradeTo': return MessageChatUpgradeTo.fromJson(newJson);
    case 'messageChatUpgradeFrom': return MessageChatUpgradeFrom.fromJson(newJson);
    case 'messagePinMessage': return MessagePinMessage.fromJson(newJson);
    case 'messageScreenshotTaken': return MessageScreenshotTaken.fromJson(newJson);
    case 'messageChatSetTheme': return MessageChatSetTheme.fromJson(newJson);
    case 'messageChatSetMessageAutoDeleteTime': return MessageChatSetMessageAutoDeleteTime.fromJson(newJson);
    case 'messageForumTopicCreated': return MessageForumTopicCreated.fromJson(newJson);
    case 'messageForumTopicEdited': return MessageForumTopicEdited.fromJson(newJson);
    case 'messageForumTopicIsClosedToggled': return MessageForumTopicIsClosedToggled.fromJson(newJson);
    case 'messageForumTopicIsHiddenToggled': return MessageForumTopicIsHiddenToggled.fromJson(newJson);
    case 'messageSuggestProfilePhoto': return MessageSuggestProfilePhoto.fromJson(newJson);
    case 'messageCustomServiceAction': return MessageCustomServiceAction.fromJson(newJson);
    case 'messageGameScore': return MessageGameScore.fromJson(newJson);
    case 'messagePaymentSuccessful': return MessagePaymentSuccessful.fromJson(newJson);
    case 'messagePaymentSuccessfulBot': return MessagePaymentSuccessfulBot.fromJson(newJson);
    case 'messageGiftedPremium': return MessageGiftedPremium.fromJson(newJson);
    case 'messageContactRegistered': return MessageContactRegistered.fromJson(newJson);
    case 'messageWebsiteConnected': return MessageWebsiteConnected.fromJson(newJson);
    case 'messageBotWriteAccessAllowed': return MessageBotWriteAccessAllowed.fromJson(newJson);
    case 'messageWebAppDataSent': return MessageWebAppDataSent.fromJson(newJson);
    case 'messageWebAppDataReceived': return MessageWebAppDataReceived.fromJson(newJson);
    case 'messagePassportDataSent': return MessagePassportDataSent.fromJson(newJson);
    case 'messagePassportDataReceived': return MessagePassportDataReceived.fromJson(newJson);
    case 'messageProximityAlertTriggered': return MessageProximityAlertTriggered.fromJson(newJson);
    case 'messageUnsupported': return MessageUnsupported.fromJson(newJson);
    case 'textEntityType': return TextEntityType.fromJson(newJson);
    case 'textEntityTypeMention': return TextEntityTypeMention.fromJson(newJson);
    case 'textEntityTypeHashtag': return TextEntityTypeHashtag.fromJson(newJson);
    case 'textEntityTypeCashtag': return TextEntityTypeCashtag.fromJson(newJson);
    case 'textEntityTypeBotCommand': return TextEntityTypeBotCommand.fromJson(newJson);
    case 'textEntityTypeUrl': return TextEntityTypeUrl.fromJson(newJson);
    case 'textEntityTypeEmailAddress': return TextEntityTypeEmailAddress.fromJson(newJson);
    case 'textEntityTypePhoneNumber': return TextEntityTypePhoneNumber.fromJson(newJson);
    case 'textEntityTypeBankCardNumber': return TextEntityTypeBankCardNumber.fromJson(newJson);
    case 'textEntityTypeBold': return TextEntityTypeBold.fromJson(newJson);
    case 'textEntityTypeItalic': return TextEntityTypeItalic.fromJson(newJson);
    case 'textEntityTypeUnderline': return TextEntityTypeUnderline.fromJson(newJson);
    case 'textEntityTypeStrikethrough': return TextEntityTypeStrikethrough.fromJson(newJson);
    case 'textEntityTypeSpoiler': return TextEntityTypeSpoiler.fromJson(newJson);
    case 'textEntityTypeCode': return TextEntityTypeCode.fromJson(newJson);
    case 'textEntityTypePre': return TextEntityTypePre.fromJson(newJson);
    case 'textEntityTypePreCode': return TextEntityTypePreCode.fromJson(newJson);
    case 'textEntityTypeTextUrl': return TextEntityTypeTextUrl.fromJson(newJson);
    case 'textEntityTypeMentionName': return TextEntityTypeMentionName.fromJson(newJson);
    case 'textEntityTypeCustomEmoji': return TextEntityTypeCustomEmoji.fromJson(newJson);
    case 'textEntityTypeMediaTimestamp': return TextEntityTypeMediaTimestamp.fromJson(newJson);
    case 'inputThumbnail': return InputThumbnail.fromJson(newJson);
    case 'messageSchedulingState': return MessageSchedulingState.fromJson(newJson);
    case 'messageSchedulingStateSendAtDate': return MessageSchedulingStateSendAtDate.fromJson(newJson);
    case 'messageSchedulingStateSendWhenOnline': return MessageSchedulingStateSendWhenOnline.fromJson(newJson);
    case 'messageSendOptions': return MessageSendOptions.fromJson(newJson);
    case 'messageCopyOptions': return MessageCopyOptions.fromJson(newJson);
    case 'inputMessageContent': return InputMessageContent.fromJson(newJson);
    case 'inputMessageText': return InputMessageText.fromJson(newJson);
    case 'inputMessageAnimation': return InputMessageAnimation.fromJson(newJson);
    case 'inputMessageAudio': return InputMessageAudio.fromJson(newJson);
    case 'inputMessageDocument': return InputMessageDocument.fromJson(newJson);
    case 'inputMessagePhoto': return InputMessagePhoto.fromJson(newJson);
    case 'inputMessageSticker': return InputMessageSticker.fromJson(newJson);
    case 'inputMessageVideo': return InputMessageVideo.fromJson(newJson);
    case 'inputMessageVideoNote': return InputMessageVideoNote.fromJson(newJson);
    case 'inputMessageVoiceNote': return InputMessageVoiceNote.fromJson(newJson);
    case 'inputMessageLocation': return InputMessageLocation.fromJson(newJson);
    case 'inputMessageVenue': return InputMessageVenue.fromJson(newJson);
    case 'inputMessageContact': return InputMessageContact.fromJson(newJson);
    case 'inputMessageDice': return InputMessageDice.fromJson(newJson);
    case 'inputMessageGame': return InputMessageGame.fromJson(newJson);
    case 'inputMessageInvoice': return InputMessageInvoice.fromJson(newJson);
    case 'inputMessagePoll': return InputMessagePoll.fromJson(newJson);
    case 'inputMessageForwarded': return InputMessageForwarded.fromJson(newJson);
    case 'searchMessagesFilter': return SearchMessagesFilter.fromJson(newJson);
    case 'searchMessagesFilterEmpty': return SearchMessagesFilterEmpty.fromJson(newJson);
    case 'searchMessagesFilterAnimation': return SearchMessagesFilterAnimation.fromJson(newJson);
    case 'searchMessagesFilterAudio': return SearchMessagesFilterAudio.fromJson(newJson);
    case 'searchMessagesFilterDocument': return SearchMessagesFilterDocument.fromJson(newJson);
    case 'searchMessagesFilterPhoto': return SearchMessagesFilterPhoto.fromJson(newJson);
    case 'searchMessagesFilterVideo': return SearchMessagesFilterVideo.fromJson(newJson);
    case 'searchMessagesFilterVoiceNote': return SearchMessagesFilterVoiceNote.fromJson(newJson);
    case 'searchMessagesFilterPhotoAndVideo': return SearchMessagesFilterPhotoAndVideo.fromJson(newJson);
    case 'searchMessagesFilterUrl': return SearchMessagesFilterUrl.fromJson(newJson);
    case 'searchMessagesFilterChatPhoto': return SearchMessagesFilterChatPhoto.fromJson(newJson);
    case 'searchMessagesFilterVideoNote': return SearchMessagesFilterVideoNote.fromJson(newJson);
    case 'searchMessagesFilterVoiceAndVideoNote': return SearchMessagesFilterVoiceAndVideoNote.fromJson(newJson);
    case 'searchMessagesFilterMention': return SearchMessagesFilterMention.fromJson(newJson);
    case 'searchMessagesFilterUnreadMention': return SearchMessagesFilterUnreadMention.fromJson(newJson);
    case 'searchMessagesFilterUnreadReaction': return SearchMessagesFilterUnreadReaction.fromJson(newJson);
    case 'searchMessagesFilterFailedToSend': return SearchMessagesFilterFailedToSend.fromJson(newJson);
    case 'searchMessagesFilterPinned': return SearchMessagesFilterPinned.fromJson(newJson);
    case 'chatAction': return ChatAction.fromJson(newJson);
    case 'chatActionTyping': return ChatActionTyping.fromJson(newJson);
    case 'chatActionRecordingVideo': return ChatActionRecordingVideo.fromJson(newJson);
    case 'chatActionUploadingVideo': return ChatActionUploadingVideo.fromJson(newJson);
    case 'chatActionRecordingVoiceNote': return ChatActionRecordingVoiceNote.fromJson(newJson);
    case 'chatActionUploadingVoiceNote': return ChatActionUploadingVoiceNote.fromJson(newJson);
    case 'chatActionUploadingPhoto': return ChatActionUploadingPhoto.fromJson(newJson);
    case 'chatActionUploadingDocument': return ChatActionUploadingDocument.fromJson(newJson);
    case 'chatActionChoosingSticker': return ChatActionChoosingSticker.fromJson(newJson);
    case 'chatActionChoosingLocation': return ChatActionChoosingLocation.fromJson(newJson);
    case 'chatActionChoosingContact': return ChatActionChoosingContact.fromJson(newJson);
    case 'chatActionStartPlayingGame': return ChatActionStartPlayingGame.fromJson(newJson);
    case 'chatActionRecordingVideoNote': return ChatActionRecordingVideoNote.fromJson(newJson);
    case 'chatActionUploadingVideoNote': return ChatActionUploadingVideoNote.fromJson(newJson);
    case 'chatActionWatchingAnimations': return ChatActionWatchingAnimations.fromJson(newJson);
    case 'chatActionCancel': return ChatActionCancel.fromJson(newJson);
    case 'userStatus': return UserStatus.fromJson(newJson);
    case 'userStatusEmpty': return UserStatusEmpty.fromJson(newJson);
    case 'userStatusOnline': return UserStatusOnline.fromJson(newJson);
    case 'userStatusOffline': return UserStatusOffline.fromJson(newJson);
    case 'userStatusRecently': return UserStatusRecently.fromJson(newJson);
    case 'userStatusLastWeek': return UserStatusLastWeek.fromJson(newJson);
    case 'userStatusLastMonth': return UserStatusLastMonth.fromJson(newJson);
    case 'stickers': return Stickers.fromJson(newJson);
    case 'emojis': return Emojis.fromJson(newJson);
    case 'stickerSet': return StickerSet.fromJson(newJson);
    case 'stickerSetInfo': return StickerSetInfo.fromJson(newJson);
    case 'stickerSets': return StickerSets.fromJson(newJson);
    case 'trendingStickerSets': return TrendingStickerSets.fromJson(newJson);
    case 'callDiscardReason': return CallDiscardReason.fromJson(newJson);
    case 'callDiscardReasonEmpty': return CallDiscardReasonEmpty.fromJson(newJson);
    case 'callDiscardReasonMissed': return CallDiscardReasonMissed.fromJson(newJson);
    case 'callDiscardReasonDeclined': return CallDiscardReasonDeclined.fromJson(newJson);
    case 'callDiscardReasonDisconnected': return CallDiscardReasonDisconnected.fromJson(newJson);
    case 'callDiscardReasonHungUp': return CallDiscardReasonHungUp.fromJson(newJson);
    case 'callProtocol': return CallProtocol.fromJson(newJson);
    case 'callServerType': return CallServerType.fromJson(newJson);
    case 'callServerTypeTelegramReflector': return CallServerTypeTelegramReflector.fromJson(newJson);
    case 'callServerTypeWebrtc': return CallServerTypeWebrtc.fromJson(newJson);
    case 'callServer': return CallServer.fromJson(newJson);
    case 'callId': return CallId.fromJson(newJson);
    case 'groupCallId': return GroupCallId.fromJson(newJson);
    case 'callState': return CallState.fromJson(newJson);
    case 'callStatePending': return CallStatePending.fromJson(newJson);
    case 'callStateExchangingKeys': return CallStateExchangingKeys.fromJson(newJson);
    case 'callStateReady': return CallStateReady.fromJson(newJson);
    case 'callStateHangingUp': return CallStateHangingUp.fromJson(newJson);
    case 'callStateDiscarded': return CallStateDiscarded.fromJson(newJson);
    case 'callStateError': return CallStateError.fromJson(newJson);
    case 'groupCallVideoQuality': return GroupCallVideoQuality.fromJson(newJson);
    case 'groupCallVideoQualityThumbnail': return GroupCallVideoQualityThumbnail.fromJson(newJson);
    case 'groupCallVideoQualityMedium': return GroupCallVideoQualityMedium.fromJson(newJson);
    case 'groupCallVideoQualityFull': return GroupCallVideoQualityFull.fromJson(newJson);
    case 'groupCallStream': return GroupCallStream.fromJson(newJson);
    case 'groupCallStreams': return GroupCallStreams.fromJson(newJson);
    case 'rtmpUrl': return RtmpUrl.fromJson(newJson);
    case 'groupCallRecentSpeaker': return GroupCallRecentSpeaker.fromJson(newJson);
    case 'groupCall': return GroupCall.fromJson(newJson);
    case 'groupCallVideoSourceGroup': return GroupCallVideoSourceGroup.fromJson(newJson);
    case 'groupCallParticipantVideoInfo': return GroupCallParticipantVideoInfo.fromJson(newJson);
    case 'groupCallParticipant': return GroupCallParticipant.fromJson(newJson);
    case 'callProblem': return CallProblem.fromJson(newJson);
    case 'callProblemEcho': return CallProblemEcho.fromJson(newJson);
    case 'callProblemNoise': return CallProblemNoise.fromJson(newJson);
    case 'callProblemInterruptions': return CallProblemInterruptions.fromJson(newJson);
    case 'callProblemDistortedSpeech': return CallProblemDistortedSpeech.fromJson(newJson);
    case 'callProblemSilentLocal': return CallProblemSilentLocal.fromJson(newJson);
    case 'callProblemSilentRemote': return CallProblemSilentRemote.fromJson(newJson);
    case 'callProblemDropped': return CallProblemDropped.fromJson(newJson);
    case 'callProblemDistortedVideo': return CallProblemDistortedVideo.fromJson(newJson);
    case 'callProblemPixelatedVideo': return CallProblemPixelatedVideo.fromJson(newJson);
    case 'call': return Call.fromJson(newJson);
    case 'phoneNumberAuthenticationSettings': return PhoneNumberAuthenticationSettings.fromJson(newJson);
    case 'addedReaction': return AddedReaction.fromJson(newJson);
    case 'addedReactions': return AddedReactions.fromJson(newJson);
    case 'availableReaction': return AvailableReaction.fromJson(newJson);
    case 'availableReactions': return AvailableReactions.fromJson(newJson);
    case 'emojiReaction': return EmojiReaction.fromJson(newJson);
    case 'animations': return Animations.fromJson(newJson);
    case 'diceStickers': return DiceStickers.fromJson(newJson);
    case 'diceStickersRegular': return DiceStickersRegular.fromJson(newJson);
    case 'diceStickersSlotMachine': return DiceStickersSlotMachine.fromJson(newJson);
    case 'importedContacts': return ImportedContacts.fromJson(newJson);
    case 'speechRecognitionResult': return SpeechRecognitionResult.fromJson(newJson);
    case 'speechRecognitionResultPending': return SpeechRecognitionResultPending.fromJson(newJson);
    case 'speechRecognitionResultText': return SpeechRecognitionResultText.fromJson(newJson);
    case 'speechRecognitionResultError': return SpeechRecognitionResultError.fromJson(newJson);
    case 'attachmentMenuBotColor': return AttachmentMenuBotColor.fromJson(newJson);
    case 'attachmentMenuBot': return AttachmentMenuBot.fromJson(newJson);
    case 'sentWebAppMessage': return SentWebAppMessage.fromJson(newJson);
    case 'httpUrl': return HttpUrl.fromJson(newJson);
    case 'userLink': return UserLink.fromJson(newJson);
    case 'inputInlineQueryResult': return InputInlineQueryResult.fromJson(newJson);
    case 'inputInlineQueryResultAnimation': return InputInlineQueryResultAnimation.fromJson(newJson);
    case 'inputInlineQueryResultArticle': return InputInlineQueryResultArticle.fromJson(newJson);
    case 'inputInlineQueryResultAudio': return InputInlineQueryResultAudio.fromJson(newJson);
    case 'inputInlineQueryResultContact': return InputInlineQueryResultContact.fromJson(newJson);
    case 'inputInlineQueryResultDocument': return InputInlineQueryResultDocument.fromJson(newJson);
    case 'inputInlineQueryResultGame': return InputInlineQueryResultGame.fromJson(newJson);
    case 'inputInlineQueryResultLocation': return InputInlineQueryResultLocation.fromJson(newJson);
    case 'inputInlineQueryResultPhoto': return InputInlineQueryResultPhoto.fromJson(newJson);
    case 'inputInlineQueryResultSticker': return InputInlineQueryResultSticker.fromJson(newJson);
    case 'inputInlineQueryResultVenue': return InputInlineQueryResultVenue.fromJson(newJson);
    case 'inputInlineQueryResultVideo': return InputInlineQueryResultVideo.fromJson(newJson);
    case 'inputInlineQueryResultVoiceNote': return InputInlineQueryResultVoiceNote.fromJson(newJson);
    case 'inlineQueryResult': return InlineQueryResult.fromJson(newJson);
    case 'inlineQueryResultArticle': return InlineQueryResultArticle.fromJson(newJson);
    case 'inlineQueryResultContact': return InlineQueryResultContact.fromJson(newJson);
    case 'inlineQueryResultLocation': return InlineQueryResultLocation.fromJson(newJson);
    case 'inlineQueryResultVenue': return InlineQueryResultVenue.fromJson(newJson);
    case 'inlineQueryResultGame': return InlineQueryResultGame.fromJson(newJson);
    case 'inlineQueryResultAnimation': return InlineQueryResultAnimation.fromJson(newJson);
    case 'inlineQueryResultAudio': return InlineQueryResultAudio.fromJson(newJson);
    case 'inlineQueryResultDocument': return InlineQueryResultDocument.fromJson(newJson);
    case 'inlineQueryResultPhoto': return InlineQueryResultPhoto.fromJson(newJson);
    case 'inlineQueryResultSticker': return InlineQueryResultSticker.fromJson(newJson);
    case 'inlineQueryResultVideo': return InlineQueryResultVideo.fromJson(newJson);
    case 'inlineQueryResultVoiceNote': return InlineQueryResultVoiceNote.fromJson(newJson);
    case 'inlineQueryResults': return InlineQueryResults.fromJson(newJson);
    case 'callbackQueryPayload': return CallbackQueryPayload.fromJson(newJson);
    case 'callbackQueryPayloadData': return CallbackQueryPayloadData.fromJson(newJson);
    case 'callbackQueryPayloadDataWithPassword': return CallbackQueryPayloadDataWithPassword.fromJson(newJson);
    case 'callbackQueryPayloadGame': return CallbackQueryPayloadGame.fromJson(newJson);
    case 'callbackQueryAnswer': return CallbackQueryAnswer.fromJson(newJson);
    case 'customRequestResult': return CustomRequestResult.fromJson(newJson);
    case 'gameHighScore': return GameHighScore.fromJson(newJson);
    case 'gameHighScores': return GameHighScores.fromJson(newJson);
    case 'chatEventAction': return ChatEventAction.fromJson(newJson);
    case 'chatEventMessageEdited': return ChatEventMessageEdited.fromJson(newJson);
    case 'chatEventMessageDeleted': return ChatEventMessageDeleted.fromJson(newJson);
    case 'chatEventMessagePinned': return ChatEventMessagePinned.fromJson(newJson);
    case 'chatEventMessageUnpinned': return ChatEventMessageUnpinned.fromJson(newJson);
    case 'chatEventPollStopped': return ChatEventPollStopped.fromJson(newJson);
    case 'chatEventMemberJoined': return ChatEventMemberJoined.fromJson(newJson);
    case 'chatEventMemberJoinedByInviteLink': return ChatEventMemberJoinedByInviteLink.fromJson(newJson);
    case 'chatEventMemberJoinedByRequest': return ChatEventMemberJoinedByRequest.fromJson(newJson);
    case 'chatEventMemberInvited': return ChatEventMemberInvited.fromJson(newJson);
    case 'chatEventMemberLeft': return ChatEventMemberLeft.fromJson(newJson);
    case 'chatEventMemberPromoted': return ChatEventMemberPromoted.fromJson(newJson);
    case 'chatEventMemberRestricted': return ChatEventMemberRestricted.fromJson(newJson);
    case 'chatEventAvailableReactionsChanged': return ChatEventAvailableReactionsChanged.fromJson(newJson);
    case 'chatEventDescriptionChanged': return ChatEventDescriptionChanged.fromJson(newJson);
    case 'chatEventLinkedChatChanged': return ChatEventLinkedChatChanged.fromJson(newJson);
    case 'chatEventLocationChanged': return ChatEventLocationChanged.fromJson(newJson);
    case 'chatEventMessageAutoDeleteTimeChanged': return ChatEventMessageAutoDeleteTimeChanged.fromJson(newJson);
    case 'chatEventPermissionsChanged': return ChatEventPermissionsChanged.fromJson(newJson);
    case 'chatEventPhotoChanged': return ChatEventPhotoChanged.fromJson(newJson);
    case 'chatEventSlowModeDelayChanged': return ChatEventSlowModeDelayChanged.fromJson(newJson);
    case 'chatEventStickerSetChanged': return ChatEventStickerSetChanged.fromJson(newJson);
    case 'chatEventTitleChanged': return ChatEventTitleChanged.fromJson(newJson);
    case 'chatEventUsernameChanged': return ChatEventUsernameChanged.fromJson(newJson);
    case 'chatEventActiveUsernamesChanged': return ChatEventActiveUsernamesChanged.fromJson(newJson);
    case 'chatEventHasProtectedContentToggled': return ChatEventHasProtectedContentToggled.fromJson(newJson);
    case 'chatEventInvitesToggled': return ChatEventInvitesToggled.fromJson(newJson);
    case 'chatEventIsAllHistoryAvailableToggled': return ChatEventIsAllHistoryAvailableToggled.fromJson(newJson);
    case 'chatEventHasAggressiveAntiSpamEnabledToggled': return ChatEventHasAggressiveAntiSpamEnabledToggled.fromJson(newJson);
    case 'chatEventSignMessagesToggled': return ChatEventSignMessagesToggled.fromJson(newJson);
    case 'chatEventInviteLinkEdited': return ChatEventInviteLinkEdited.fromJson(newJson);
    case 'chatEventInviteLinkRevoked': return ChatEventInviteLinkRevoked.fromJson(newJson);
    case 'chatEventInviteLinkDeleted': return ChatEventInviteLinkDeleted.fromJson(newJson);
    case 'chatEventVideoChatCreated': return ChatEventVideoChatCreated.fromJson(newJson);
    case 'chatEventVideoChatEnded': return ChatEventVideoChatEnded.fromJson(newJson);
    case 'chatEventVideoChatMuteNewParticipantsToggled': return ChatEventVideoChatMuteNewParticipantsToggled.fromJson(newJson);
    case 'chatEventVideoChatParticipantIsMutedToggled': return ChatEventVideoChatParticipantIsMutedToggled.fromJson(newJson);
    case 'chatEventVideoChatParticipantVolumeLevelChanged': return ChatEventVideoChatParticipantVolumeLevelChanged.fromJson(newJson);
    case 'chatEventIsForumToggled': return ChatEventIsForumToggled.fromJson(newJson);
    case 'chatEventForumTopicCreated': return ChatEventForumTopicCreated.fromJson(newJson);
    case 'chatEventForumTopicEdited': return ChatEventForumTopicEdited.fromJson(newJson);
    case 'chatEventForumTopicToggleIsClosed': return ChatEventForumTopicToggleIsClosed.fromJson(newJson);
    case 'chatEventForumTopicToggleIsHidden': return ChatEventForumTopicToggleIsHidden.fromJson(newJson);
    case 'chatEventForumTopicDeleted': return ChatEventForumTopicDeleted.fromJson(newJson);
    case 'chatEventForumTopicPinned': return ChatEventForumTopicPinned.fromJson(newJson);
    case 'chatEvent': return ChatEvent.fromJson(newJson);
    case 'chatEvents': return ChatEvents.fromJson(newJson);
    case 'chatEventLogFilters': return ChatEventLogFilters.fromJson(newJson);
    case 'languagePackStringValue': return LanguagePackStringValue.fromJson(newJson);
    case 'languagePackStringValueOrdinary': return LanguagePackStringValueOrdinary.fromJson(newJson);
    case 'languagePackStringValuePluralized': return LanguagePackStringValuePluralized.fromJson(newJson);
    case 'languagePackStringValueDeleted': return LanguagePackStringValueDeleted.fromJson(newJson);
    case 'languagePackString': return LanguagePackString.fromJson(newJson);
    case 'languagePackStrings': return LanguagePackStrings.fromJson(newJson);
    case 'languagePackInfo': return LanguagePackInfo.fromJson(newJson);
    case 'localizationTargetInfo': return LocalizationTargetInfo.fromJson(newJson);
    case 'premiumLimitType': return PremiumLimitType.fromJson(newJson);
    case 'premiumLimitTypeSupergroupCount': return PremiumLimitTypeSupergroupCount.fromJson(newJson);
    case 'premiumLimitTypePinnedChatCount': return PremiumLimitTypePinnedChatCount.fromJson(newJson);
    case 'premiumLimitTypeCreatedPublicChatCount': return PremiumLimitTypeCreatedPublicChatCount.fromJson(newJson);
    case 'premiumLimitTypeSavedAnimationCount': return PremiumLimitTypeSavedAnimationCount.fromJson(newJson);
    case 'premiumLimitTypeFavoriteStickerCount': return PremiumLimitTypeFavoriteStickerCount.fromJson(newJson);
    case 'premiumLimitTypeChatFilterCount': return PremiumLimitTypeChatFilterCount.fromJson(newJson);
    case 'premiumLimitTypeChatFilterChosenChatCount': return PremiumLimitTypeChatFilterChosenChatCount.fromJson(newJson);
    case 'premiumLimitTypePinnedArchivedChatCount': return PremiumLimitTypePinnedArchivedChatCount.fromJson(newJson);
    case 'premiumLimitTypeCaptionLength': return PremiumLimitTypeCaptionLength.fromJson(newJson);
    case 'premiumLimitTypeBioLength': return PremiumLimitTypeBioLength.fromJson(newJson);
    case 'premiumFeature': return PremiumFeature.fromJson(newJson);
    case 'premiumFeatureIncreasedLimits': return PremiumFeatureIncreasedLimits.fromJson(newJson);
    case 'premiumFeatureIncreasedUploadFileSize': return PremiumFeatureIncreasedUploadFileSize.fromJson(newJson);
    case 'premiumFeatureImprovedDownloadSpeed': return PremiumFeatureImprovedDownloadSpeed.fromJson(newJson);
    case 'premiumFeatureVoiceRecognition': return PremiumFeatureVoiceRecognition.fromJson(newJson);
    case 'premiumFeatureDisabledAds': return PremiumFeatureDisabledAds.fromJson(newJson);
    case 'premiumFeatureUniqueReactions': return PremiumFeatureUniqueReactions.fromJson(newJson);
    case 'premiumFeatureUniqueStickers': return PremiumFeatureUniqueStickers.fromJson(newJson);
    case 'premiumFeatureCustomEmoji': return PremiumFeatureCustomEmoji.fromJson(newJson);
    case 'premiumFeatureAdvancedChatManagement': return PremiumFeatureAdvancedChatManagement.fromJson(newJson);
    case 'premiumFeatureProfileBadge': return PremiumFeatureProfileBadge.fromJson(newJson);
    case 'premiumFeatureEmojiStatus': return PremiumFeatureEmojiStatus.fromJson(newJson);
    case 'premiumFeatureAnimatedProfilePhoto': return PremiumFeatureAnimatedProfilePhoto.fromJson(newJson);
    case 'premiumFeatureForumTopicIcon': return PremiumFeatureForumTopicIcon.fromJson(newJson);
    case 'premiumFeatureAppIcons': return PremiumFeatureAppIcons.fromJson(newJson);
    case 'premiumLimit': return PremiumLimit.fromJson(newJson);
    case 'premiumFeatures': return PremiumFeatures.fromJson(newJson);
    case 'premiumSource': return PremiumSource.fromJson(newJson);
    case 'premiumSourceLimitExceeded': return PremiumSourceLimitExceeded.fromJson(newJson);
    case 'premiumSourceFeature': return PremiumSourceFeature.fromJson(newJson);
    case 'premiumSourceLink': return PremiumSourceLink.fromJson(newJson);
    case 'premiumSourceSettings': return PremiumSourceSettings.fromJson(newJson);
    case 'premiumFeaturePromotionAnimation': return PremiumFeaturePromotionAnimation.fromJson(newJson);
    case 'premiumState': return PremiumState.fromJson(newJson);
    case 'storePaymentPurpose': return StorePaymentPurpose.fromJson(newJson);
    case 'storePaymentPurposePremiumSubscription': return StorePaymentPurposePremiumSubscription.fromJson(newJson);
    case 'storePaymentPurposeGiftedPremium': return StorePaymentPurposeGiftedPremium.fromJson(newJson);
    case 'deviceToken': return DeviceToken.fromJson(newJson);
    case 'deviceTokenFirebaseCloudMessaging': return DeviceTokenFirebaseCloudMessaging.fromJson(newJson);
    case 'deviceTokenApplePush': return DeviceTokenApplePush.fromJson(newJson);
    case 'deviceTokenApplePushVoIP': return DeviceTokenApplePushVoIP.fromJson(newJson);
    case 'deviceTokenWindowsPush': return DeviceTokenWindowsPush.fromJson(newJson);
    case 'deviceTokenMicrosoftPush': return DeviceTokenMicrosoftPush.fromJson(newJson);
    case 'deviceTokenMicrosoftPushVoIP': return DeviceTokenMicrosoftPushVoIP.fromJson(newJson);
    case 'deviceTokenWebPush': return DeviceTokenWebPush.fromJson(newJson);
    case 'deviceTokenSimplePush': return DeviceTokenSimplePush.fromJson(newJson);
    case 'deviceTokenUbuntuPush': return DeviceTokenUbuntuPush.fromJson(newJson);
    case 'deviceTokenBlackBerryPush': return DeviceTokenBlackBerryPush.fromJson(newJson);
    case 'deviceTokenTizenPush': return DeviceTokenTizenPush.fromJson(newJson);
    case 'pushReceiverId': return PushReceiverId.fromJson(newJson);
    case 'backgroundFill': return BackgroundFill.fromJson(newJson);
    case 'backgroundFillSolid': return BackgroundFillSolid.fromJson(newJson);
    case 'backgroundFillGradient': return BackgroundFillGradient.fromJson(newJson);
    case 'backgroundFillFreeformGradient': return BackgroundFillFreeformGradient.fromJson(newJson);
    case 'backgroundType': return BackgroundType.fromJson(newJson);
    case 'backgroundTypeWallpaper': return BackgroundTypeWallpaper.fromJson(newJson);
    case 'backgroundTypePattern': return BackgroundTypePattern.fromJson(newJson);
    case 'backgroundTypeFill': return BackgroundTypeFill.fromJson(newJson);
    case 'background': return Background.fromJson(newJson);
    case 'backgrounds': return Backgrounds.fromJson(newJson);
    case 'inputBackground': return InputBackground.fromJson(newJson);
    case 'inputBackgroundLocal': return InputBackgroundLocal.fromJson(newJson);
    case 'inputBackgroundRemote': return InputBackgroundRemote.fromJson(newJson);
    case 'themeSettings': return ThemeSettings.fromJson(newJson);
    case 'chatTheme': return ChatTheme.fromJson(newJson);
    case 'hashtags': return Hashtags.fromJson(newJson);
    case 'canTransferOwnershipResult': return CanTransferOwnershipResult.fromJson(newJson);
    case 'canTransferOwnershipResultOk': return CanTransferOwnershipResultOk.fromJson(newJson);
    case 'canTransferOwnershipResultPasswordNeeded': return CanTransferOwnershipResultPasswordNeeded.fromJson(newJson);
    case 'canTransferOwnershipResultPasswordTooFresh': return CanTransferOwnershipResultPasswordTooFresh.fromJson(newJson);
    case 'canTransferOwnershipResultSessionTooFresh': return CanTransferOwnershipResultSessionTooFresh.fromJson(newJson);
    case 'checkChatUsernameResult': return CheckChatUsernameResult.fromJson(newJson);
    case 'checkChatUsernameResultOk': return CheckChatUsernameResultOk.fromJson(newJson);
    case 'checkChatUsernameResultUsernameInvalid': return CheckChatUsernameResultUsernameInvalid.fromJson(newJson);
    case 'checkChatUsernameResultUsernameOccupied': return CheckChatUsernameResultUsernameOccupied.fromJson(newJson);
    case 'checkChatUsernameResultUsernamePurchasable': return CheckChatUsernameResultUsernamePurchasable.fromJson(newJson);
    case 'checkChatUsernameResultPublicChatsTooMany': return CheckChatUsernameResultPublicChatsTooMany.fromJson(newJson);
    case 'checkChatUsernameResultPublicGroupsUnavailable': return CheckChatUsernameResultPublicGroupsUnavailable.fromJson(newJson);
    case 'checkStickerSetNameResult': return CheckStickerSetNameResult.fromJson(newJson);
    case 'checkStickerSetNameResultOk': return CheckStickerSetNameResultOk.fromJson(newJson);
    case 'checkStickerSetNameResultNameInvalid': return CheckStickerSetNameResultNameInvalid.fromJson(newJson);
    case 'checkStickerSetNameResultNameOccupied': return CheckStickerSetNameResultNameOccupied.fromJson(newJson);
    case 'resetPasswordResult': return ResetPasswordResult.fromJson(newJson);
    case 'resetPasswordResultOk': return ResetPasswordResultOk.fromJson(newJson);
    case 'resetPasswordResultPending': return ResetPasswordResultPending.fromJson(newJson);
    case 'resetPasswordResultDeclined': return ResetPasswordResultDeclined.fromJson(newJson);
    case 'messageFileType': return MessageFileType.fromJson(newJson);
    case 'messageFileTypePrivate': return MessageFileTypePrivate.fromJson(newJson);
    case 'messageFileTypeGroup': return MessageFileTypeGroup.fromJson(newJson);
    case 'messageFileTypeUnknown': return MessageFileTypeUnknown.fromJson(newJson);
    case 'pushMessageContent': return PushMessageContent.fromJson(newJson);
    case 'pushMessageContentHidden': return PushMessageContentHidden.fromJson(newJson);
    case 'pushMessageContentAnimation': return PushMessageContentAnimation.fromJson(newJson);
    case 'pushMessageContentAudio': return PushMessageContentAudio.fromJson(newJson);
    case 'pushMessageContentContact': return PushMessageContentContact.fromJson(newJson);
    case 'pushMessageContentContactRegistered': return PushMessageContentContactRegistered.fromJson(newJson);
    case 'pushMessageContentDocument': return PushMessageContentDocument.fromJson(newJson);
    case 'pushMessageContentGame': return PushMessageContentGame.fromJson(newJson);
    case 'pushMessageContentGameScore': return PushMessageContentGameScore.fromJson(newJson);
    case 'pushMessageContentInvoice': return PushMessageContentInvoice.fromJson(newJson);
    case 'pushMessageContentLocation': return PushMessageContentLocation.fromJson(newJson);
    case 'pushMessageContentPhoto': return PushMessageContentPhoto.fromJson(newJson);
    case 'pushMessageContentPoll': return PushMessageContentPoll.fromJson(newJson);
    case 'pushMessageContentScreenshotTaken': return PushMessageContentScreenshotTaken.fromJson(newJson);
    case 'pushMessageContentSticker': return PushMessageContentSticker.fromJson(newJson);
    case 'pushMessageContentText': return PushMessageContentText.fromJson(newJson);
    case 'pushMessageContentVideo': return PushMessageContentVideo.fromJson(newJson);
    case 'pushMessageContentVideoNote': return PushMessageContentVideoNote.fromJson(newJson);
    case 'pushMessageContentVoiceNote': return PushMessageContentVoiceNote.fromJson(newJson);
    case 'pushMessageContentBasicGroupChatCreate': return PushMessageContentBasicGroupChatCreate.fromJson(newJson);
    case 'pushMessageContentChatAddMembers': return PushMessageContentChatAddMembers.fromJson(newJson);
    case 'pushMessageContentChatChangePhoto': return PushMessageContentChatChangePhoto.fromJson(newJson);
    case 'pushMessageContentChatChangeTitle': return PushMessageContentChatChangeTitle.fromJson(newJson);
    case 'pushMessageContentChatSetTheme': return PushMessageContentChatSetTheme.fromJson(newJson);
    case 'pushMessageContentChatDeleteMember': return PushMessageContentChatDeleteMember.fromJson(newJson);
    case 'pushMessageContentChatJoinByLink': return PushMessageContentChatJoinByLink.fromJson(newJson);
    case 'pushMessageContentChatJoinByRequest': return PushMessageContentChatJoinByRequest.fromJson(newJson);
    case 'pushMessageContentRecurringPayment': return PushMessageContentRecurringPayment.fromJson(newJson);
    case 'pushMessageContentSuggestProfilePhoto': return PushMessageContentSuggestProfilePhoto.fromJson(newJson);
    case 'pushMessageContentMessageForwards': return PushMessageContentMessageForwards.fromJson(newJson);
    case 'pushMessageContentMediaAlbum': return PushMessageContentMediaAlbum.fromJson(newJson);
    case 'notificationType': return NotificationType.fromJson(newJson);
    case 'notificationTypeNewMessage': return NotificationTypeNewMessage.fromJson(newJson);
    case 'notificationTypeNewSecretChat': return NotificationTypeNewSecretChat.fromJson(newJson);
    case 'notificationTypeNewCall': return NotificationTypeNewCall.fromJson(newJson);
    case 'notificationTypeNewPushMessage': return NotificationTypeNewPushMessage.fromJson(newJson);
    case 'notificationGroupType': return NotificationGroupType.fromJson(newJson);
    case 'notificationGroupTypeMessages': return NotificationGroupTypeMessages.fromJson(newJson);
    case 'notificationGroupTypeMentions': return NotificationGroupTypeMentions.fromJson(newJson);
    case 'notificationGroupTypeSecretChat': return NotificationGroupTypeSecretChat.fromJson(newJson);
    case 'notificationGroupTypeCalls': return NotificationGroupTypeCalls.fromJson(newJson);
    case 'notificationSound': return NotificationSound.fromJson(newJson);
    case 'notificationSounds': return NotificationSounds.fromJson(newJson);
    case 'notification': return Notification.fromJson(newJson);
    case 'notificationGroup': return NotificationGroup.fromJson(newJson);
    case 'optionValue': return OptionValue.fromJson(newJson);
    case 'optionValueBoolean': return OptionValueBoolean.fromJson(newJson);
    case 'optionValueEmpty': return OptionValueEmpty.fromJson(newJson);
    case 'optionValueInteger': return OptionValueInteger.fromJson(newJson);
    case 'optionValueString': return OptionValueString.fromJson(newJson);
    case 'jsonObjectMember': return JsonObjectMember.fromJson(newJson);
    case 'jsonValue': return JsonValue.fromJson(newJson);
    case 'jsonValueNull': return JsonValueNull.fromJson(newJson);
    case 'jsonValueBoolean': return JsonValueBoolean.fromJson(newJson);
    case 'jsonValueNumber': return JsonValueNumber.fromJson(newJson);
    case 'jsonValueString': return JsonValueString.fromJson(newJson);
    case 'jsonValueArray': return JsonValueArray.fromJson(newJson);
    case 'jsonValueObject': return JsonValueObject.fromJson(newJson);
    case 'userPrivacySettingRule': return UserPrivacySettingRule.fromJson(newJson);
    case 'userPrivacySettingRuleAllowAll': return UserPrivacySettingRuleAllowAll.fromJson(newJson);
    case 'userPrivacySettingRuleAllowContacts': return UserPrivacySettingRuleAllowContacts.fromJson(newJson);
    case 'userPrivacySettingRuleAllowUsers': return UserPrivacySettingRuleAllowUsers.fromJson(newJson);
    case 'userPrivacySettingRuleAllowChatMembers': return UserPrivacySettingRuleAllowChatMembers.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictAll': return UserPrivacySettingRuleRestrictAll.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictContacts': return UserPrivacySettingRuleRestrictContacts.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictUsers': return UserPrivacySettingRuleRestrictUsers.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictChatMembers': return UserPrivacySettingRuleRestrictChatMembers.fromJson(newJson);
    case 'userPrivacySettingRules': return UserPrivacySettingRules.fromJson(newJson);
    case 'userPrivacySetting': return UserPrivacySetting.fromJson(newJson);
    case 'userPrivacySettingShowStatus': return UserPrivacySettingShowStatus.fromJson(newJson);
    case 'userPrivacySettingShowProfilePhoto': return UserPrivacySettingShowProfilePhoto.fromJson(newJson);
    case 'userPrivacySettingShowLinkInForwardedMessages': return UserPrivacySettingShowLinkInForwardedMessages.fromJson(newJson);
    case 'userPrivacySettingShowPhoneNumber': return UserPrivacySettingShowPhoneNumber.fromJson(newJson);
    case 'userPrivacySettingAllowChatInvites': return UserPrivacySettingAllowChatInvites.fromJson(newJson);
    case 'userPrivacySettingAllowCalls': return UserPrivacySettingAllowCalls.fromJson(newJson);
    case 'userPrivacySettingAllowPeerToPeerCalls': return UserPrivacySettingAllowPeerToPeerCalls.fromJson(newJson);
    case 'userPrivacySettingAllowFindingByPhoneNumber': return UserPrivacySettingAllowFindingByPhoneNumber.fromJson(newJson);
    case 'userPrivacySettingAllowPrivateVoiceAndVideoNoteMessages': return UserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages.fromJson(newJson);
    case 'accountTtl': return AccountTtl.fromJson(newJson);
    case 'messageAutoDeleteTime': return MessageAutoDeleteTime.fromJson(newJson);
    case 'sessionType': return SessionType.fromJson(newJson);
    case 'sessionTypeAndroid': return SessionTypeAndroid.fromJson(newJson);
    case 'sessionTypeApple': return SessionTypeApple.fromJson(newJson);
    case 'sessionTypeBrave': return SessionTypeBrave.fromJson(newJson);
    case 'sessionTypeChrome': return SessionTypeChrome.fromJson(newJson);
    case 'sessionTypeEdge': return SessionTypeEdge.fromJson(newJson);
    case 'sessionTypeFirefox': return SessionTypeFirefox.fromJson(newJson);
    case 'sessionTypeIpad': return SessionTypeIpad.fromJson(newJson);
    case 'sessionTypeIphone': return SessionTypeIphone.fromJson(newJson);
    case 'sessionTypeLinux': return SessionTypeLinux.fromJson(newJson);
    case 'sessionTypeMac': return SessionTypeMac.fromJson(newJson);
    case 'sessionTypeOpera': return SessionTypeOpera.fromJson(newJson);
    case 'sessionTypeSafari': return SessionTypeSafari.fromJson(newJson);
    case 'sessionTypeUbuntu': return SessionTypeUbuntu.fromJson(newJson);
    case 'sessionTypeUnknown': return SessionTypeUnknown.fromJson(newJson);
    case 'sessionTypeVivaldi': return SessionTypeVivaldi.fromJson(newJson);
    case 'sessionTypeWindows': return SessionTypeWindows.fromJson(newJson);
    case 'sessionTypeXbox': return SessionTypeXbox.fromJson(newJson);
    case 'session': return Session.fromJson(newJson);
    case 'sessions': return Sessions.fromJson(newJson);
    case 'connectedWebsite': return ConnectedWebsite.fromJson(newJson);
    case 'connectedWebsites': return ConnectedWebsites.fromJson(newJson);
    case 'chatReportReason': return ChatReportReason.fromJson(newJson);
    case 'chatReportReasonSpam': return ChatReportReasonSpam.fromJson(newJson);
    case 'chatReportReasonViolence': return ChatReportReasonViolence.fromJson(newJson);
    case 'chatReportReasonPornography': return ChatReportReasonPornography.fromJson(newJson);
    case 'chatReportReasonChildAbuse': return ChatReportReasonChildAbuse.fromJson(newJson);
    case 'chatReportReasonCopyright': return ChatReportReasonCopyright.fromJson(newJson);
    case 'chatReportReasonUnrelatedLocation': return ChatReportReasonUnrelatedLocation.fromJson(newJson);
    case 'chatReportReasonFake': return ChatReportReasonFake.fromJson(newJson);
    case 'chatReportReasonIllegalDrugs': return ChatReportReasonIllegalDrugs.fromJson(newJson);
    case 'chatReportReasonPersonalDetails': return ChatReportReasonPersonalDetails.fromJson(newJson);
    case 'chatReportReasonCustom': return ChatReportReasonCustom.fromJson(newJson);
    case 'targetChat': return TargetChat.fromJson(newJson);
    case 'targetChatCurrent': return TargetChatCurrent.fromJson(newJson);
    case 'targetChatChosen': return TargetChatChosen.fromJson(newJson);
    case 'targetChatInternalLink': return TargetChatInternalLink.fromJson(newJson);
    case 'internalLinkType': return InternalLinkType.fromJson(newJson);
    case 'internalLinkTypeActiveSessions': return InternalLinkTypeActiveSessions.fromJson(newJson);
    case 'internalLinkTypeAttachmentMenuBot': return InternalLinkTypeAttachmentMenuBot.fromJson(newJson);
    case 'internalLinkTypeAuthenticationCode': return InternalLinkTypeAuthenticationCode.fromJson(newJson);
    case 'internalLinkTypeBackground': return InternalLinkTypeBackground.fromJson(newJson);
    case 'internalLinkTypeBotStart': return InternalLinkTypeBotStart.fromJson(newJson);
    case 'internalLinkTypeBotStartInGroup': return InternalLinkTypeBotStartInGroup.fromJson(newJson);
    case 'internalLinkTypeBotAddToChannel': return InternalLinkTypeBotAddToChannel.fromJson(newJson);
    case 'internalLinkTypeChangePhoneNumber': return InternalLinkTypeChangePhoneNumber.fromJson(newJson);
    case 'internalLinkTypeChatInvite': return InternalLinkTypeChatInvite.fromJson(newJson);
    case 'internalLinkTypeDefaultMessageAutoDeleteTimerSettings': return InternalLinkTypeDefaultMessageAutoDeleteTimerSettings.fromJson(newJson);
    case 'internalLinkTypeEditProfileSettings': return InternalLinkTypeEditProfileSettings.fromJson(newJson);
    case 'internalLinkTypeFilterSettings': return InternalLinkTypeFilterSettings.fromJson(newJson);
    case 'internalLinkTypeGame': return InternalLinkTypeGame.fromJson(newJson);
    case 'internalLinkTypeInstantView': return InternalLinkTypeInstantView.fromJson(newJson);
    case 'internalLinkTypeInvoice': return InternalLinkTypeInvoice.fromJson(newJson);
    case 'internalLinkTypeLanguagePack': return InternalLinkTypeLanguagePack.fromJson(newJson);
    case 'internalLinkTypeLanguageSettings': return InternalLinkTypeLanguageSettings.fromJson(newJson);
    case 'internalLinkTypeMessage': return InternalLinkTypeMessage.fromJson(newJson);
    case 'internalLinkTypeMessageDraft': return InternalLinkTypeMessageDraft.fromJson(newJson);
    case 'internalLinkTypePassportDataRequest': return InternalLinkTypePassportDataRequest.fromJson(newJson);
    case 'internalLinkTypePhoneNumberConfirmation': return InternalLinkTypePhoneNumberConfirmation.fromJson(newJson);
    case 'internalLinkTypePremiumFeatures': return InternalLinkTypePremiumFeatures.fromJson(newJson);
    case 'internalLinkTypePrivacyAndSecuritySettings': return InternalLinkTypePrivacyAndSecuritySettings.fromJson(newJson);
    case 'internalLinkTypeProxy': return InternalLinkTypeProxy.fromJson(newJson);
    case 'internalLinkTypePublicChat': return InternalLinkTypePublicChat.fromJson(newJson);
    case 'internalLinkTypeQrCodeAuthentication': return InternalLinkTypeQrCodeAuthentication.fromJson(newJson);
    case 'internalLinkTypeRestorePurchases': return InternalLinkTypeRestorePurchases.fromJson(newJson);
    case 'internalLinkTypeSettings': return InternalLinkTypeSettings.fromJson(newJson);
    case 'internalLinkTypeStickerSet': return InternalLinkTypeStickerSet.fromJson(newJson);
    case 'internalLinkTypeTheme': return InternalLinkTypeTheme.fromJson(newJson);
    case 'internalLinkTypeThemeSettings': return InternalLinkTypeThemeSettings.fromJson(newJson);
    case 'internalLinkTypeUnknownDeepLink': return InternalLinkTypeUnknownDeepLink.fromJson(newJson);
    case 'internalLinkTypeUnsupportedProxy': return InternalLinkTypeUnsupportedProxy.fromJson(newJson);
    case 'internalLinkTypeUserPhoneNumber': return InternalLinkTypeUserPhoneNumber.fromJson(newJson);
    case 'internalLinkTypeUserToken': return InternalLinkTypeUserToken.fromJson(newJson);
    case 'internalLinkTypeVideoChat': return InternalLinkTypeVideoChat.fromJson(newJson);
    case 'messageLink': return MessageLink.fromJson(newJson);
    case 'messageLinkInfo': return MessageLinkInfo.fromJson(newJson);
    case 'filePart': return FilePart.fromJson(newJson);
    case 'fileType': return FileType.fromJson(newJson);
    case 'fileTypeNone': return FileTypeNone.fromJson(newJson);
    case 'fileTypeAnimation': return FileTypeAnimation.fromJson(newJson);
    case 'fileTypeAudio': return FileTypeAudio.fromJson(newJson);
    case 'fileTypeDocument': return FileTypeDocument.fromJson(newJson);
    case 'fileTypeNotificationSound': return FileTypeNotificationSound.fromJson(newJson);
    case 'fileTypePhoto': return FileTypePhoto.fromJson(newJson);
    case 'fileTypeProfilePhoto': return FileTypeProfilePhoto.fromJson(newJson);
    case 'fileTypeSecret': return FileTypeSecret.fromJson(newJson);
    case 'fileTypeSecretThumbnail': return FileTypeSecretThumbnail.fromJson(newJson);
    case 'fileTypeSecure': return FileTypeSecure.fromJson(newJson);
    case 'fileTypeSticker': return FileTypeSticker.fromJson(newJson);
    case 'fileTypeThumbnail': return FileTypeThumbnail.fromJson(newJson);
    case 'fileTypeUnknown': return FileTypeUnknown.fromJson(newJson);
    case 'fileTypeVideo': return FileTypeVideo.fromJson(newJson);
    case 'fileTypeVideoNote': return FileTypeVideoNote.fromJson(newJson);
    case 'fileTypeVoiceNote': return FileTypeVoiceNote.fromJson(newJson);
    case 'fileTypeWallpaper': return FileTypeWallpaper.fromJson(newJson);
    case 'storageStatisticsByFileType': return StorageStatisticsByFileType.fromJson(newJson);
    case 'storageStatisticsByChat': return StorageStatisticsByChat.fromJson(newJson);
    case 'storageStatistics': return StorageStatistics.fromJson(newJson);
    case 'storageStatisticsFast': return StorageStatisticsFast.fromJson(newJson);
    case 'databaseStatistics': return DatabaseStatistics.fromJson(newJson);
    case 'networkType': return NetworkType.fromJson(newJson);
    case 'networkTypeNone': return NetworkTypeNone.fromJson(newJson);
    case 'networkTypeMobile': return NetworkTypeMobile.fromJson(newJson);
    case 'networkTypeMobileRoaming': return NetworkTypeMobileRoaming.fromJson(newJson);
    case 'networkTypeWiFi': return NetworkTypeWiFi.fromJson(newJson);
    case 'networkTypeOther': return NetworkTypeOther.fromJson(newJson);
    case 'networkStatisticsEntry': return NetworkStatisticsEntry.fromJson(newJson);
    case 'networkStatisticsEntryFile': return NetworkStatisticsEntryFile.fromJson(newJson);
    case 'networkStatisticsEntryCall': return NetworkStatisticsEntryCall.fromJson(newJson);
    case 'networkStatistics': return NetworkStatistics.fromJson(newJson);
    case 'autoDownloadSettings': return AutoDownloadSettings.fromJson(newJson);
    case 'autoDownloadSettingsPresets': return AutoDownloadSettingsPresets.fromJson(newJson);
    case 'connectionState': return ConnectionState.fromJson(newJson);
    case 'connectionStateWaitingForNetwork': return ConnectionStateWaitingForNetwork.fromJson(newJson);
    case 'connectionStateConnectingToProxy': return ConnectionStateConnectingToProxy.fromJson(newJson);
    case 'connectionStateConnecting': return ConnectionStateConnecting.fromJson(newJson);
    case 'connectionStateUpdating': return ConnectionStateUpdating.fromJson(newJson);
    case 'connectionStateReady': return ConnectionStateReady.fromJson(newJson);
    case 'topChatCategory': return TopChatCategory.fromJson(newJson);
    case 'topChatCategoryUsers': return TopChatCategoryUsers.fromJson(newJson);
    case 'topChatCategoryBots': return TopChatCategoryBots.fromJson(newJson);
    case 'topChatCategoryGroups': return TopChatCategoryGroups.fromJson(newJson);
    case 'topChatCategoryChannels': return TopChatCategoryChannels.fromJson(newJson);
    case 'topChatCategoryInlineBots': return TopChatCategoryInlineBots.fromJson(newJson);
    case 'topChatCategoryCalls': return TopChatCategoryCalls.fromJson(newJson);
    case 'topChatCategoryForwardChats': return TopChatCategoryForwardChats.fromJson(newJson);
    case 'tMeUrlType': return TMeUrlType.fromJson(newJson);
    case 'tMeUrlTypeUser': return TMeUrlTypeUser.fromJson(newJson);
    case 'tMeUrlTypeSupergroup': return TMeUrlTypeSupergroup.fromJson(newJson);
    case 'tMeUrlTypeChatInvite': return TMeUrlTypeChatInvite.fromJson(newJson);
    case 'tMeUrlTypeStickerSet': return TMeUrlTypeStickerSet.fromJson(newJson);
    case 'tMeUrl': return TMeUrl.fromJson(newJson);
    case 'tMeUrls': return TMeUrls.fromJson(newJson);
    case 'suggestedAction': return SuggestedAction.fromJson(newJson);
    case 'suggestedActionEnableArchiveAndMuteNewChats': return SuggestedActionEnableArchiveAndMuteNewChats.fromJson(newJson);
    case 'suggestedActionCheckPassword': return SuggestedActionCheckPassword.fromJson(newJson);
    case 'suggestedActionCheckPhoneNumber': return SuggestedActionCheckPhoneNumber.fromJson(newJson);
    case 'suggestedActionViewChecksHint': return SuggestedActionViewChecksHint.fromJson(newJson);
    case 'suggestedActionConvertToBroadcastGroup': return SuggestedActionConvertToBroadcastGroup.fromJson(newJson);
    case 'suggestedActionSetPassword': return SuggestedActionSetPassword.fromJson(newJson);
    case 'count': return Count.fromJson(newJson);
    case 'text': return Text.fromJson(newJson);
    case 'seconds': return Seconds.fromJson(newJson);
    case 'fileDownloadedPrefixSize': return FileDownloadedPrefixSize.fromJson(newJson);
    case 'deepLinkInfo': return DeepLinkInfo.fromJson(newJson);
    case 'textParseMode': return TextParseMode.fromJson(newJson);
    case 'textParseModeMarkdown': return TextParseModeMarkdown.fromJson(newJson);
    case 'textParseModeHTML': return TextParseModeHTML.fromJson(newJson);
    case 'proxyType': return ProxyType.fromJson(newJson);
    case 'proxyTypeSocks5': return ProxyTypeSocks5.fromJson(newJson);
    case 'proxyTypeHttp': return ProxyTypeHttp.fromJson(newJson);
    case 'proxyTypeMtproto': return ProxyTypeMtproto.fromJson(newJson);
    case 'proxy': return Proxy.fromJson(newJson);
    case 'proxies': return Proxies.fromJson(newJson);
    case 'inputSticker': return InputSticker.fromJson(newJson);
    case 'dateRange': return DateRange.fromJson(newJson);
    case 'statisticalValue': return StatisticalValue.fromJson(newJson);
    case 'statisticalGraph': return StatisticalGraph.fromJson(newJson);
    case 'statisticalGraphData': return StatisticalGraphData.fromJson(newJson);
    case 'statisticalGraphAsync': return StatisticalGraphAsync.fromJson(newJson);
    case 'statisticalGraphError': return StatisticalGraphError.fromJson(newJson);
    case 'chatStatisticsMessageInteractionInfo': return ChatStatisticsMessageInteractionInfo.fromJson(newJson);
    case 'chatStatisticsMessageSenderInfo': return ChatStatisticsMessageSenderInfo.fromJson(newJson);
    case 'chatStatisticsAdministratorActionsInfo': return ChatStatisticsAdministratorActionsInfo.fromJson(newJson);
    case 'chatStatisticsInviterInfo': return ChatStatisticsInviterInfo.fromJson(newJson);
    case 'chatStatistics': return ChatStatistics.fromJson(newJson);
    case 'chatStatisticsSupergroup': return ChatStatisticsSupergroup.fromJson(newJson);
    case 'chatStatisticsChannel': return ChatStatisticsChannel.fromJson(newJson);
    case 'messageStatistics': return MessageStatistics.fromJson(newJson);
    case 'point': return Point.fromJson(newJson);
    case 'vectorPathCommand': return VectorPathCommand.fromJson(newJson);
    case 'vectorPathCommandLine': return VectorPathCommandLine.fromJson(newJson);
    case 'vectorPathCommandCubicBezierCurve': return VectorPathCommandCubicBezierCurve.fromJson(newJson);
    case 'botCommandScope': return BotCommandScope.fromJson(newJson);
    case 'botCommandScopeDefault': return BotCommandScopeDefault.fromJson(newJson);
    case 'botCommandScopeAllPrivateChats': return BotCommandScopeAllPrivateChats.fromJson(newJson);
    case 'botCommandScopeAllGroupChats': return BotCommandScopeAllGroupChats.fromJson(newJson);
    case 'botCommandScopeAllChatAdministrators': return BotCommandScopeAllChatAdministrators.fromJson(newJson);
    case 'botCommandScopeChat': return BotCommandScopeChat.fromJson(newJson);
    case 'botCommandScopeChatAdministrators': return BotCommandScopeChatAdministrators.fromJson(newJson);
    case 'botCommandScopeChatMember': return BotCommandScopeChatMember.fromJson(newJson);
    case 'update': return Update.fromJson(newJson);
    case 'updateAuthorizationState': return UpdateAuthorizationState.fromJson(newJson);
    case 'updateNewMessage': return UpdateNewMessage.fromJson(newJson);
    case 'updateMessageSendAcknowledged': return UpdateMessageSendAcknowledged.fromJson(newJson);
    case 'updateMessageSendSucceeded': return UpdateMessageSendSucceeded.fromJson(newJson);
    case 'updateMessageSendFailed': return UpdateMessageSendFailed.fromJson(newJson);
    case 'updateMessageContent': return UpdateMessageContent.fromJson(newJson);
    case 'updateMessageEdited': return UpdateMessageEdited.fromJson(newJson);
    case 'updateMessageIsPinned': return UpdateMessageIsPinned.fromJson(newJson);
    case 'updateMessageInteractionInfo': return UpdateMessageInteractionInfo.fromJson(newJson);
    case 'updateMessageContentOpened': return UpdateMessageContentOpened.fromJson(newJson);
    case 'updateMessageMentionRead': return UpdateMessageMentionRead.fromJson(newJson);
    case 'updateMessageUnreadReactions': return UpdateMessageUnreadReactions.fromJson(newJson);
    case 'updateMessageLiveLocationViewed': return UpdateMessageLiveLocationViewed.fromJson(newJson);
    case 'updateNewChat': return UpdateNewChat.fromJson(newJson);
    case 'updateChatTitle': return UpdateChatTitle.fromJson(newJson);
    case 'updateChatPhoto': return UpdateChatPhoto.fromJson(newJson);
    case 'updateChatPermissions': return UpdateChatPermissions.fromJson(newJson);
    case 'updateChatLastMessage': return UpdateChatLastMessage.fromJson(newJson);
    case 'updateChatPosition': return UpdateChatPosition.fromJson(newJson);
    case 'updateChatReadInbox': return UpdateChatReadInbox.fromJson(newJson);
    case 'updateChatReadOutbox': return UpdateChatReadOutbox.fromJson(newJson);
    case 'updateChatActionBar': return UpdateChatActionBar.fromJson(newJson);
    case 'updateChatAvailableReactions': return UpdateChatAvailableReactions.fromJson(newJson);
    case 'updateChatDraftMessage': return UpdateChatDraftMessage.fromJson(newJson);
    case 'updateChatMessageSender': return UpdateChatMessageSender.fromJson(newJson);
    case 'updateChatMessageAutoDeleteTime': return UpdateChatMessageAutoDeleteTime.fromJson(newJson);
    case 'updateChatNotificationSettings': return UpdateChatNotificationSettings.fromJson(newJson);
    case 'updateChatPendingJoinRequests': return UpdateChatPendingJoinRequests.fromJson(newJson);
    case 'updateChatReplyMarkup': return UpdateChatReplyMarkup.fromJson(newJson);
    case 'updateChatTheme': return UpdateChatTheme.fromJson(newJson);
    case 'updateChatUnreadMentionCount': return UpdateChatUnreadMentionCount.fromJson(newJson);
    case 'updateChatUnreadReactionCount': return UpdateChatUnreadReactionCount.fromJson(newJson);
    case 'updateChatVideoChat': return UpdateChatVideoChat.fromJson(newJson);
    case 'updateChatDefaultDisableNotification': return UpdateChatDefaultDisableNotification.fromJson(newJson);
    case 'updateChatHasProtectedContent': return UpdateChatHasProtectedContent.fromJson(newJson);
    case 'updateChatHasScheduledMessages': return UpdateChatHasScheduledMessages.fromJson(newJson);
    case 'updateChatIsBlocked': return UpdateChatIsBlocked.fromJson(newJson);
    case 'updateChatIsMarkedAsUnread': return UpdateChatIsMarkedAsUnread.fromJson(newJson);
    case 'updateChatFilters': return UpdateChatFilters.fromJson(newJson);
    case 'updateChatOnlineMemberCount': return UpdateChatOnlineMemberCount.fromJson(newJson);
    case 'updateForumTopicInfo': return UpdateForumTopicInfo.fromJson(newJson);
    case 'updateScopeNotificationSettings': return UpdateScopeNotificationSettings.fromJson(newJson);
    case 'updateNotification': return UpdateNotification.fromJson(newJson);
    case 'updateNotificationGroup': return UpdateNotificationGroup.fromJson(newJson);
    case 'updateActiveNotifications': return UpdateActiveNotifications.fromJson(newJson);
    case 'updateHavePendingNotifications': return UpdateHavePendingNotifications.fromJson(newJson);
    case 'updateDeleteMessages': return UpdateDeleteMessages.fromJson(newJson);
    case 'updateChatAction': return UpdateChatAction.fromJson(newJson);
    case 'updateUserStatus': return UpdateUserStatus.fromJson(newJson);
    case 'updateUser': return UpdateUser.fromJson(newJson);
    case 'updateBasicGroup': return UpdateBasicGroup.fromJson(newJson);
    case 'updateSupergroup': return UpdateSupergroup.fromJson(newJson);
    case 'updateSecretChat': return UpdateSecretChat.fromJson(newJson);
    case 'updateUserFullInfo': return UpdateUserFullInfo.fromJson(newJson);
    case 'updateBasicGroupFullInfo': return UpdateBasicGroupFullInfo.fromJson(newJson);
    case 'updateSupergroupFullInfo': return UpdateSupergroupFullInfo.fromJson(newJson);
    case 'updateServiceNotification': return UpdateServiceNotification.fromJson(newJson);
    case 'updateFile': return UpdateFile.fromJson(newJson);
    case 'updateFileGenerationStart': return UpdateFileGenerationStart.fromJson(newJson);
    case 'updateFileGenerationStop': return UpdateFileGenerationStop.fromJson(newJson);
    case 'updateFileDownloads': return UpdateFileDownloads.fromJson(newJson);
    case 'updateFileAddedToDownloads': return UpdateFileAddedToDownloads.fromJson(newJson);
    case 'updateFileDownload': return UpdateFileDownload.fromJson(newJson);
    case 'updateFileRemovedFromDownloads': return UpdateFileRemovedFromDownloads.fromJson(newJson);
    case 'updateCall': return UpdateCall.fromJson(newJson);
    case 'updateGroupCall': return UpdateGroupCall.fromJson(newJson);
    case 'updateGroupCallParticipant': return UpdateGroupCallParticipant.fromJson(newJson);
    case 'updateNewCallSignalingData': return UpdateNewCallSignalingData.fromJson(newJson);
    case 'updateUserPrivacySettingRules': return UpdateUserPrivacySettingRules.fromJson(newJson);
    case 'updateUnreadMessageCount': return UpdateUnreadMessageCount.fromJson(newJson);
    case 'updateUnreadChatCount': return UpdateUnreadChatCount.fromJson(newJson);
    case 'updateOption': return UpdateOption.fromJson(newJson);
    case 'updateStickerSet': return UpdateStickerSet.fromJson(newJson);
    case 'updateInstalledStickerSets': return UpdateInstalledStickerSets.fromJson(newJson);
    case 'updateTrendingStickerSets': return UpdateTrendingStickerSets.fromJson(newJson);
    case 'updateRecentStickers': return UpdateRecentStickers.fromJson(newJson);
    case 'updateFavoriteStickers': return UpdateFavoriteStickers.fromJson(newJson);
    case 'updateSavedAnimations': return UpdateSavedAnimations.fromJson(newJson);
    case 'updateSavedNotificationSounds': return UpdateSavedNotificationSounds.fromJson(newJson);
    case 'updateSelectedBackground': return UpdateSelectedBackground.fromJson(newJson);
    case 'updateChatThemes': return UpdateChatThemes.fromJson(newJson);
    case 'updateLanguagePackStrings': return UpdateLanguagePackStrings.fromJson(newJson);
    case 'updateConnectionState': return UpdateConnectionState.fromJson(newJson);
    case 'updateTermsOfService': return UpdateTermsOfService.fromJson(newJson);
    case 'updateUsersNearby': return UpdateUsersNearby.fromJson(newJson);
    case 'updateAttachmentMenuBots': return UpdateAttachmentMenuBots.fromJson(newJson);
    case 'updateWebAppMessageSent': return UpdateWebAppMessageSent.fromJson(newJson);
    case 'updateActiveEmojiReactions': return UpdateActiveEmojiReactions.fromJson(newJson);
    case 'updateDefaultReactionType': return UpdateDefaultReactionType.fromJson(newJson);
    case 'updateDiceEmojis': return UpdateDiceEmojis.fromJson(newJson);
    case 'updateAnimatedEmojiMessageClicked': return UpdateAnimatedEmojiMessageClicked.fromJson(newJson);
    case 'updateAnimationSearchParameters': return UpdateAnimationSearchParameters.fromJson(newJson);
    case 'updateSuggestedActions': return UpdateSuggestedActions.fromJson(newJson);
    case 'updateNewInlineQuery': return UpdateNewInlineQuery.fromJson(newJson);
    case 'updateNewChosenInlineResult': return UpdateNewChosenInlineResult.fromJson(newJson);
    case 'updateNewCallbackQuery': return UpdateNewCallbackQuery.fromJson(newJson);
    case 'updateNewInlineCallbackQuery': return UpdateNewInlineCallbackQuery.fromJson(newJson);
    case 'updateNewShippingQuery': return UpdateNewShippingQuery.fromJson(newJson);
    case 'updateNewPreCheckoutQuery': return UpdateNewPreCheckoutQuery.fromJson(newJson);
    case 'updateNewCustomEvent': return UpdateNewCustomEvent.fromJson(newJson);
    case 'updateNewCustomQuery': return UpdateNewCustomQuery.fromJson(newJson);
    case 'updatePoll': return UpdatePoll.fromJson(newJson);
    case 'updatePollAnswer': return UpdatePollAnswer.fromJson(newJson);
    case 'updateChatMember': return UpdateChatMember.fromJson(newJson);
    case 'updateNewChatJoinRequest': return UpdateNewChatJoinRequest.fromJson(newJson);
    case 'updates': return Updates.fromJson(newJson);
    case 'logStream': return LogStream.fromJson(newJson);
    case 'logStreamDefault': return LogStreamDefault.fromJson(newJson);
    case 'logStreamFile': return LogStreamFile.fromJson(newJson);
    case 'logStreamEmpty': return LogStreamEmpty.fromJson(newJson);
    case 'logVerbosityLevel': return LogVerbosityLevel.fromJson(newJson);
    case 'logTags': return LogTags.fromJson(newJson);
    case 'userSupportInfo': return UserSupportInfo.fromJson(newJson);
    case 'testInt': return TestInt.fromJson(newJson);
    case 'testString': return TestString.fromJson(newJson);
    case 'testBytes': return TestBytes.fromJson(newJson);
    case 'testVectorInt': return TestVectorInt.fromJson(newJson);
    case 'testVectorIntObject': return TestVectorIntObject.fromJson(newJson);
    case 'testVectorString': return TestVectorString.fromJson(newJson);
    case 'testVectorStringObject': return TestVectorStringObject.fromJson(newJson);
    default: return null;
  }
}
